{"version":3,"sources":["actions/docActions.ts","actions/peerActions.ts","reducers/docReducer.ts","reducers/peerReducer.ts","store/store.ts","components/NavBar.tsx","components/Editor/ClientCursor.ts","components/Editor/CodeEditor.tsx","pages/DocPage.tsx","theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DocActionTypes","ConnectionStatus","PeerActionTypes","initialDocState","client","doc","loading","errorMessage","docReducer","state","action","type","ATTACH_DOC","LOAD_DOC","ERROR","initialPeerState","peers","peerReducer","existedClient","id","CONNECT_PEER","color","status","Connected","DISCONNECT_PEER","Disconnected","rootReducer","combineReducers","docState","peerState","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","Typography","variant","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","MenuItem","ClientCursor","height","marker","lineMarker","nameRemoveTimeMap","nameAnimationDelay","nameAnimationDuration","nameRemoveTime","this","Map","cm","cursorPos","removeCursor","cursorCoords","cursorEl","document","createElement","bottom","top","classList","add","style","borderLeftColor","setBookmark","widget","insertLeft","showCursorNameReserve","fromPos","toPos","removeLine","getDoc","markText","css","nameEl","addEventListener","has","clearTimeout","get","textContent","backgroundColor","invert","remove","appendChild","animationDuration","animationDelay","removeNameReserve","timeoutId","setTimeout","parentNode","removeChild","delete","set","clear","width","marginTop","CodeEditor","props","dispatch","useDispatch","docKey","useSelector","peerClients","otherClientsCursor","useRef","connectClient","clientId","randomColor","newClientCursor","current","addPeerAction","useEffect","shouldLoad","a","yorkie","createClient","process","activate","createDocument","attach","update","content","createText","sync","console","error","message","attachDocAction","disconnectClient","unsubscribe","subscribe","name","newPeerClientsId","value","getKey","toIDString","setNewPeerClientsId","Set","Object","keys","Box","CircularProgress","Alert","severity","options","mode","lineNumbers","editorDidMount","editor","updateCursor","pos","forEach","change","actor","getID","posFromIndex","getRootObject","onChanges","changes","from","to","replaceRange","updateLine","setSize","setValue","getValue","onSelection","data","undefined","origin","indexFromPos","ranges","anchor","head","updateSelection","onBeforeChange","text","join","edit","DocPage","match","params","createMuiTheme","palette","store","createStore","applyMiddleware","thunk","App","ThemeProvider","CssBaseline","path","exact","render","Math","random","toString","substring","component","window","location","hostname","ReactDOM","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0e2d01d4.chunk.js","sourcesContent":["import { ActionCreator, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport yorkie, { Client, Document } from 'yorkie-js-sdk';\n\nexport interface IDocState {\n  client: Client | null;\n  doc: Document | null;\n  loading: boolean;\n  errorMessage: string;\n}\n\nexport enum DocActionTypes {\n  ATTACH_DOC = 'ATTACH_DOC',\n  LOAD_DOC = 'LOAD_DOC',\n  ERROR = 'ERROR',\n}\n\nexport interface IAttachDocAction {\n  type: DocActionTypes.ATTACH_DOC;\n  client: Client;\n  doc: Document;\n}\n\nexport interface ILoadDocAction {\n  type: DocActionTypes.LOAD_DOC;\n  loading: boolean;\n}\n\nexport interface IErrorAction {\n  type: DocActionTypes.ERROR;\n  errorMessage: string;\n}\nexport type DocActions = IAttachDocAction | ILoadDocAction | IErrorAction;\n\n/** <Promise<Return Type>, State Interface, Type of Param, Type of Action> */\nexport const attachDocAction: ActionCreator<ThunkAction<Promise<any>, IDocState, null, IAttachDocAction>> = (\n  docKey: string,\n) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const client = yorkie.createClient(`${process.env.REACT_APP_YORKIE_RPC_ADDR}`);\n      await client.activate();\n\n      const doc = yorkie.createDocument('codepairs', docKey);\n      await client.attach(doc);\n\n      doc.update((root: any) => {\n        if (!root.content) {\n          root.createText('content');\n        }\n      });\n      await client.sync();\n\n      dispatch({ type: DocActionTypes.ATTACH_DOC, doc, client });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      dispatch({ type: DocActionTypes.ERROR, errorMessage: err.message });\n    }\n\n    dispatch({ type: DocActionTypes.LOAD_DOC, loading: false });\n  };\n};\n\nexport const loadDocAction: ActionCreator<ThunkAction<any, IDocState, null, ILoadDocAction>> = (\n  shouldLoad: boolean,\n) => (dispatch: Dispatch) => dispatch({ type: DocActionTypes.LOAD_DOC, loading: shouldLoad });\n","export interface IPeerState {\n  peers: {\n    [id: string]: Peer;\n  };\n}\n\nexport enum ConnectionStatus {\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface Peer {\n  id: string;\n  color: string;\n  status: ConnectionStatus;\n}\n\nexport enum PeerActionTypes {\n  CONNECT_PEER = 'CONNECT_PEER',\n  DISCONNECT_PEER = 'DISCONNECT_PEER',\n}\n\nexport interface ConnectPeerAction {\n  type: PeerActionTypes.CONNECT_PEER;\n  id: string;\n  color: string;\n}\n\nexport interface DisconnectPeerAction {\n  type: PeerActionTypes.DISCONNECT_PEER;\n  id: string;\n}\n\nexport const addPeerAction = (id: string, color: string): ConnectPeerAction => ({\n  type: PeerActionTypes.CONNECT_PEER,\n  id,\n  color,\n});\n\nexport const disconnectPeerAction = (id: string): DisconnectPeerAction => ({\n  type: PeerActionTypes.DISCONNECT_PEER,\n  id,\n});\n\nexport type PeerActions = ConnectPeerAction | DisconnectPeerAction;\n","import { Reducer } from 'redux';\n\nimport { DocActionTypes, DocActions, IDocState } from 'actions/docActions';\n\nconst initialDocState: IDocState = {\n  client: null,\n  doc: null,\n  loading: false,\n  errorMessage: '',\n};\n\nconst docReducer: Reducer<IDocState, DocActions> = (state = initialDocState, action) => {\n  switch (action.type) {\n    case DocActionTypes.ATTACH_DOC: {\n      return {\n        ...state,\n        client: action.client,\n        doc: action.doc,\n      };\n    }\n    case DocActionTypes.LOAD_DOC: {\n      return {\n        ...state,\n        loading: action.loading,\n      };\n    }\n    case DocActionTypes.ERROR: {\n      return {\n        ...state,\n        errorMessage: action.errorMessage,\n        doc: null,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default docReducer;\n","import { Reducer } from 'redux';\n\nimport { IPeerState, PeerActionTypes, PeerActions, ConnectionStatus } from 'actions/peerActions';\n\nconst initialPeerState: IPeerState = {\n  peers: {},\n};\n\nconst peerReducer: Reducer<IPeerState, PeerActions> = (state = initialPeerState, action: PeerActions) => {\n  const existedClient = state.peers[action.id];\n  switch (action.type) {\n    case PeerActionTypes.CONNECT_PEER: {\n      return {\n        ...state,\n        peers: {\n          ...state.peers,\n          [action.id]: {\n            id: action.id,\n            color: action.color,\n            status: ConnectionStatus.Connected,\n          },\n        },\n      };\n    }\n\n    case PeerActionTypes.DISCONNECT_PEER: {\n      const client = {\n        ...existedClient,\n        status: ConnectionStatus.Disconnected,\n      };\n\n      return {\n        ...state,\n        peers: {\n          ...state.peers,\n          [action.id]: client,\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default peerReducer;\n","/**\n * Imports from Redux:\n * applyMiddleware: Applies middleware to the dispatch method of the Redux store\n * combineReducers: Merges reducers into one\n * createStore: Creates a Redux store that holds the state tree\n * Store: The TS Type used for the store, or state tree\n */\nimport { applyMiddleware, combineReducers, createStore, Store } from 'redux';\n\n/**\n * Thunk\n * Redux Thunk middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods dispatch and getState as parameters.\n */\nimport thunk from 'redux-thunk';\n// Import reducers and state type\nimport { IDocState } from 'actions/docActions';\nimport docReducer from 'reducers/docReducer';\nimport { IPeerState } from 'actions/peerActions';\nimport peerReducer from 'reducers/peerReducer';\n\n// Create an interface for the application state\nexport interface IAppState {\n  docState: IDocState;\n  peerState: IPeerState;\n}\n\n// Create the root reducer\nconst rootReducer = combineReducers<IAppState>({\n  docState: docReducer,\n  peerState: peerReducer,\n});\n\n// Create a configure store function of type `IAppState`\nexport default function configureStore(): Store<IAppState, any> {\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\n  return store;\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Yorkie CodePair\n          </Typography>\n          <div>\n            <IconButton\n              aria-label=\"settings\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <SettingsIcon />\n            </IconButton>\n            <Menu id=\"menu-appbar\" anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n              <MenuItem onClick={handleClose}>Theme</MenuItem>\n              <MenuItem onClick={handleClose}>Editor Mode</MenuItem>\n              <MenuItem onClick={handleClose}>Tab Size</MenuItem>\n              <MenuItem onClick={handleClose}>Font Size</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import invert from 'invert-color';\n\n/**\n * used in yorkie-sdk-js client\n * If ActorId is provided by yorkie-sdk-js, we should use that\n */\ntype ActorId = string;\n\n// REF https://github.com/FujitsuLaboratories/cattaz/blob/master/src/AppEnabledWikiEditorCodeMirror.jsx#L24\nclass ClientCursor {\n  id: ActorId;\n\n  color: string;\n\n  height: number;\n\n  marker: CodeMirror.TextMarker | null;\n\n  lineMarker: CodeMirror.TextMarker | null;\n\n  nameRemoveTimeMap: Map<ActorId, ReturnType<typeof setTimeout>>;\n\n  nameAnimationDelay: number;\n\n  nameAnimationDuration: number;\n\n  nameRemoveTime: number;\n\n  constructor(id: ActorId, color: string) {\n    this.id = id;\n    this.color = color;\n    this.height = 0;\n    this.marker = null;\n    this.lineMarker = null;\n\n    this.nameRemoveTimeMap = new Map();\n    this.nameAnimationDelay = 1;\n    this.nameAnimationDuration = 0.2;\n    this.nameRemoveTime = (this.nameAnimationDuration + this.nameAnimationDelay) * 1000;\n  }\n\n  updateCursor(cm: CodeMirror.Editor, cursorPos: CodeMirror.Position) {\n    this.removeCursor();\n    const cursorCoords = cm.cursorCoords(cursorPos);\n    const cursorEl = document.createElement('span');\n    this.height = cursorCoords.bottom - cursorCoords.top;\n\n    cursorEl.classList.add('codePair-cursor');\n    cursorEl.style.borderLeftColor = this.color;\n    cursorEl.style.height = `${this.height}px`;\n\n    this.marker = cm.setBookmark(cursorPos, {\n      widget: cursorEl,\n      insertLeft: true,\n    });\n\n    this.showCursorNameReserve(cursorEl);\n  }\n\n  updateLine(cm: CodeMirror.Editor, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) {\n    this.removeLine();\n\n    this.lineMarker = cm.getDoc().markText(fromPos, toPos, {\n      css: `background-color : ${this.color}; opacity:0.7`,\n    });\n  }\n\n  // when user's cursor hover, show name\n  private showCursorNameReserve(cursorEl: Element) {\n    const nameEl = document.createElement('span');\n    nameEl.classList.add('codePair-name');\n\n    cursorEl.addEventListener('mouseenter', () => {\n      if (this.nameRemoveTimeMap.has(this.id)) {\n        clearTimeout(this.nameRemoveTimeMap.get(this.id)!);\n      }\n\n      nameEl.textContent = this.id;\n      nameEl.style.top = `-${this.height}px`;\n      nameEl.style.backgroundColor = this.color;\n      nameEl.style.color = invert(this.color, true);\n\n      /**\n       * nameEl is being reused.\n       * In order to keep the name visible while the mouse is hovering,\n       * It need to delete the css class containing animation when it is mouseenter and add it when it is mouseleave.\n       */\n      nameEl.classList.remove('text-remove');\n      cursorEl.appendChild(nameEl);\n    });\n\n    cursorEl.addEventListener('mouseleave', () => {\n      nameEl.classList.add('text-remove');\n      nameEl.style.animationDuration = `${this.nameAnimationDuration}s`;\n      nameEl.style.animationDelay = `${this.nameAnimationDelay}s`;\n\n      this.removeNameReserve(nameEl);\n    });\n  }\n\n  // After animate, It should actually be deleted it.\n  private removeNameReserve(nameEl: HTMLSpanElement) {\n    const timeoutId = setTimeout(() => {\n      nameEl.parentNode!.removeChild(nameEl);\n      this.nameRemoveTimeMap.delete(this.id);\n    }, this.nameRemoveTime);\n\n    this.nameRemoveTimeMap.set(this.id, timeoutId);\n  }\n\n  removeCursor() {\n    if (this.marker) {\n      this.marker.clear();\n      this.marker = null;\n    }\n  }\n\n  removeLine() {\n    if (this.lineMarker) {\n      this.lineMarker.clear();\n      this.lineMarker = null;\n    }\n  }\n}\n\nexport default ClientCursor;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport randomColor from 'randomcolor';\n\nimport { IAppState } from 'store/store';\nimport { attachDocAction, loadDocAction } from 'actions/docActions';\nimport { ConnectionStatus, addPeerAction, disconnectPeerAction } from 'actions/peerActions';\n\nimport ClientCursor from './ClientCursor';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport './CodeEditor.css';\n\ntype CodeEditorProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CodeEditor(props: CodeEditorProps) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const { docKey } = props;\n  const doc = useSelector((state: IAppState) => state.docState.doc);\n  const client = useSelector((state: IAppState) => state.docState.client);\n  const loading = useSelector((state: IAppState) => state.docState.loading);\n  const errorMessage = useSelector((state: IAppState) => state.docState.errorMessage);\n  const peerClients = useSelector((state: IAppState) => state.peerState.peers);\n  const otherClientsCursor = useRef<Map<string, ClientCursor>>(new Map());\n\n  const connectClient = (clientId: string) => {\n    const existedClient = peerClients[clientId];\n\n    let color: string;\n    if (existedClient && existedClient.status === ConnectionStatus.Disconnected) {\n      color = existedClient.color;\n    } else {\n      color = randomColor();\n    }\n\n    const newClientCursor = new ClientCursor(clientId, color);\n    otherClientsCursor.current.set(clientId, newClientCursor);\n    dispatch(addPeerAction(clientId, color));\n  };\n\n  // Attach document\n  useEffect(() => {\n    dispatch(loadDocAction(true));\n    dispatch(attachDocAction(docKey));\n  }, [docKey, dispatch]);\n\n  // Subscribe other client\n  useEffect(() => {\n    if (!client || !doc) {\n      return () => {};\n    }\n\n    const disconnectClient = (clientId: string) => {\n      if (otherClientsCursor.current.has(clientId)) {\n        otherClientsCursor.current.get(clientId)!.removeCursor();\n        otherClientsCursor.current.delete(clientId);\n      }\n      dispatch(disconnectPeerAction(clientId));\n    };\n\n    const unsubscribe = client.subscribe((event: any) => {\n      if (event.name === 'documents-watching-peer-changed') {\n        const newPeerClientsId: string[] = event.value[doc.getKey().toIDString()];\n        const setNewPeerClientsId = new Set(newPeerClientsId);\n\n        for (const clientId of Object.keys(peerClients)) {\n          if (setNewPeerClientsId.has(clientId) && peerClients[clientId].status === ConnectionStatus.Connected) {\n            continue;\n          }\n          disconnectClient(clientId);\n        }\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [client, doc, peerClients, dispatch]);\n\n  if (loading) {\n    return (\n      <Box height=\"100%\">\n        <CircularProgress color=\"secondary\" />\n      </Box>\n    );\n  }\n\n  if (errorMessage || client === null || doc === null) {\n    return (\n      <div className={classes.root}>\n        <Alert severity=\"error\">{errorMessage || 'fail to attach document'}</Alert>\n      </div>\n    );\n  }\n\n  return (\n    <CodeMirror\n      options={{ mode: 'xml', theme: 'monokai', lineNumbers: true }}\n      editorDidMount={(editor: CodeMirror.Editor) => {\n        const updateCursor = (clientId: string, pos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateCursor(editor, pos);\n        };\n\n        const updateLine = (clientId: string, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateLine(editor, fromPos, toPos);\n        };\n\n        doc.subscribe((event: any) => {\n          if (event.name === 'remote-change') {\n            event.value.forEach((change: any) => {\n              const { actor } = change.id;\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                  updateCursor(actor, editor.posFromIndex(0));\n                  // TODO Load user's cursor position\n                }\n              }\n            });\n          }\n        });\n\n        // When there is a document modification connected to the yorkie\n        const root = doc.getRootObject() as any;\n        root.content.onChanges((changes: any) => {\n          changes.forEach((change: any) => {\n            const { actor, from, to } = change;\n            if (change.type === 'content') {\n              const content = change.content || '';\n\n              if (actor !== client.getID()) {\n                const fromPos = editor.posFromIndex(from);\n                const toPos = editor.posFromIndex(to);\n                editor.replaceRange(content, fromPos, toPos, 'yorkie');\n              }\n            } else if (change.type === 'selection') {\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                }\n\n                let fromPos = editor.posFromIndex(from);\n                let toPos = editor.posFromIndex(to);\n                updateCursor(actor, toPos);\n\n                if (from > to) {\n                  [toPos, fromPos] = [fromPos, toPos];\n                }\n                updateLine(actor, fromPos, toPos);\n              }\n            }\n          });\n        });\n\n        // We need to subtract the height of NavBar.\n        editor.setSize('auto', 'calc(100vh - 64px)');\n        editor.setValue(root.content.getValue());\n      }}\n      // Notifying other clients to move the cursor\n      onSelection={(editor: CodeMirror.Editor, data: CodeMirror.EditorSelectionChange) => {\n        if (data.origin === undefined) {\n          return;\n        }\n\n        const from = editor.indexFromPos(data.ranges[0].anchor);\n        const to = editor.indexFromPos(data.ranges[0].head);\n\n        doc.update((root: any) => {\n          root.content.updateSelection(from, to);\n        });\n      }}\n      // Edit the yorkie document\n      onBeforeChange={(editor: CodeMirror.Editor, change: CodeMirror.EditorChange) => {\n        if (change.origin === 'yorkie' || change.origin === 'setValue') {\n          return;\n        }\n\n        const from = editor.indexFromPos(change.from);\n        const to = editor.indexFromPos(change.to);\n        const content = change.text.join('\\n');\n\n        doc.update((root: any) => {\n          root.content.edit(from, to, content);\n        });\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport NavBar from 'components/NavBar';\nimport CodeEditor from 'components/Editor/CodeEditor';\n\ntype DocPageProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function DocPage(props: RouteComponentProps<DocPageProps>) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const { docKey } = params;\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <CodeEditor docKey={docKey} />\n    </div>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport configureStore from 'store/store';\nimport DocPage from 'pages/DocPage';\nimport theme from 'theme';\n\nimport './App.css';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Router>\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return <Redirect to={`/${Math.random().toString(36).substring(7)}`} />;\n            }}\n          />\n          <Route path=\"/:docKey\" exact component={DocPage} />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}