{"version":3,"sources":["components/NavBar/index.tsx","features/docSlices.ts","features/settingSlices.ts","utils/storage.ts","components/Toolbar/Settings.tsx","components/Toolbar/index.tsx","features/peerSlices.ts","components/Editor/Cursor.ts","components/Editor/index.tsx","pages/DocPage.tsx","app/rootReducer.ts","app/store.ts","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","CodeMode","CodeTheme","CodeKeyMap","TabSize","initialState","mode","PlainText","loading","errorMessage","attachDoc","createAsyncThunk","docKey","thunkApi","a","client","yorkie","createClient","process","document","createDocument","activate","attach","update","content","createText","sync","rejectWithValue","docSlice","createSlice","name","reducers","attachDocLoading","state","action","payload","setCodeMode","extraReducers","builder","addCase","fulfilled","doc","rejected","actions","BrowserStorage","key","storage","this","window","localStorage","initial","JSON","parse","value","stringify","SettingModel","getValue","menu","codeTheme","Monokai","codeKeyMap","Sublime","tabSize","Two","settingSlice","setCodeTheme","setValue","setCodeKeyMap","setTabSize","width","minWidth","borderRadius","header","borderBottom","palette","text","disabled","padding","list","lineHeight","item","display","justifyContent","fontSize","marginTop","itemTitle","whiteSpace","alignItems","itemInfo","paddingLeft","border","textAlign","Settings","dispatch","useDispatch","useSelector","settingState","handleChange","event","target","Box","FormControl","Select","onChange","disableUnderline","displayEmpty","Object","entries","map","MenuItem","formControl","grey","selectEmpty","settingsButton","float","docState","codeMode","useState","anchorEl","setAnchorEl","useEffect","unsubscribe","subscribe","getRootObject","handleCodeModeChange","useCallback","handleSettingsClick","currentTarget","handleSettingsClose","undefined","isOpen","Boolean","Tooltip","IconButton","aria-label","onClick","Popover","id","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ConnectionStatus","peerSlice","peers","connectPeer","color","status","disconnectPeer","Disconnected","Cursor","height","marker","lineMarker","nameRemoveTimeMap","nameAnimationDelay","nameAnimationDuration","nameRemoveTime","Map","cm","cursorPos","removeCursor","cursorCoords","cursorHolder","createElement","bottom","top","classList","add","style","borderLeftColor","setBookmark","widget","insertLeft","showCursorNameReserve","fromPos","toPos","removeLine","getDoc","markText","css","nameHolder","addEventListener","has","clearTimeout","get","textContent","backgroundColor","invert","remove","appendChild","animationDuration","animationDelay","removeNameReserve","timeoutId","setTimeout","parentNode","removeChild","delete","set","clear","Editor","props","peerClients","peerState","cursorMapRef","useRef","connectClient","clientId","existedClient","randomColor","current","Connected","result","attachDocAsync","newPeerClients","getKey","toIDString","keys","CircularProgress","options","keyMap","Number","lineNumbers","lineWrapping","autoCloseTags","autoCloseBrackets","editorDidMount","editor","focus","updateCursor","pos","forEach","change","actor","getID","posFromIndex","onChanges","changes","from","to","type","replaceRange","updateLine","setSize","onSelection","data","origin","indexFromPos","ranges","anchor","head","updateSelection","onBeforeChange","join","edit","Snackbar","Alert","severity","DocPage","match","params","rootReducer","combineReducers","docReducer","peerReducer","settingReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","immutableCheck","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","handleRender","Math","random","toString","substring","ThemeProvider","CssBaseline","path","exact","render","component","location","hostname","ReactDOM","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ced8ca4.chunk.js","sourcesContent":["import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Yorkie CodePair\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport yorkie, { Client, Document } from 'yorkie-js-sdk';\n\nexport enum CodeMode {\n  PlainText = 'text/plain',\n  Go = 'go',\n  Javascript = 'javascript',\n  Clojure = 'clojure',\n  Dart = 'dart',\n  Python = 'python',\n  Ruby = 'ruby',\n  Rust = 'rust',\n}\n\nexport interface DocState {\n  client?: Client;\n  doc?: Document;\n  mode: CodeMode;\n  loading: boolean;\n  errorMessage: string;\n}\n\nconst initialState: DocState = {\n  mode: CodeMode.PlainText,\n  loading: false,\n  errorMessage: '',\n};\n\nexport const attachDoc = createAsyncThunk<AttachDocResult, string, { rejectValue: string }>(\n  'doc/attach',\n  async (docKey: string, thunkApi) => {\n    try {\n      const client = yorkie.createClient(`${process.env.REACT_APP_YORKIE_RPC_ADDR}`);\n      const document = yorkie.createDocument('codepairs', docKey);\n\n      await client.activate();\n      await client.attach(document);\n\n      document.update((root: any) => {\n        if (!root.content) {\n          root.createText('content');\n        }\n      });\n      await client.sync();\n      return { document, client };\n    } catch (err) {\n      return thunkApi.rejectWithValue(err);\n    }\n  },\n);\n\nconst docSlice = createSlice({\n  name: 'doc',\n  initialState,\n  reducers: {\n    attachDocLoading(state, action: PayloadAction<boolean>) {\n      state.loading = action.payload;\n    },\n    setCodeMode(state, action: PayloadAction<CodeMode>) {\n      state.mode = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(attachDoc.fulfilled, (state, { payload }) => {\n      state.doc = payload.document;\n      state.client = payload.client;\n    });\n    builder.addCase(attachDoc.rejected, (state, { payload }) => {\n      state.errorMessage = payload!;\n    });\n  },\n});\n\nexport const { attachDocLoading, setCodeMode } = docSlice.actions;\nexport default docSlice.reducer;\n\ntype AttachDocResult = { document: Document; client: Client };\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport BrowserStorage from 'utils/storage';\n\nexport enum CodeTheme {\n  Material = 'material',\n  Monokai = 'monokai',\n}\n\nexport enum CodeKeyMap {\n  Sublime = 'sublime',\n  Vim = 'vim',\n  Emacs = 'emacs',\n}\n\nexport enum TabSize {\n  Two = '2',\n  Four = '4',\n  Eight = '8',\n}\n\nexport type MenuKey = 'codeTheme' | 'codeKeyMap' | 'tabSize';\n\nexport type Menu = {\n  [key in MenuKey]: string;\n};\n\nexport interface SettingState {\n  menu: Menu;\n}\n\nconst SettingModel = new BrowserStorage<SettingState>('$$codepair$$setting');\n\nconst initialState: SettingState = SettingModel.getValue({\n  menu: {\n    codeTheme: CodeTheme.Monokai,\n    codeKeyMap: CodeKeyMap.Sublime,\n    tabSize: TabSize.Two,\n  },\n});\n\nconst settingSlice = createSlice({\n  name: 'setting',\n  initialState,\n  reducers: {\n\n    setCodeTheme(state, action: PayloadAction<CodeTheme>) {\n      state.menu.codeTheme = action.payload;\n      SettingModel.setValue(state);\n    },\n\n    setCodeKeyMap(state, action: PayloadAction<CodeKeyMap>) {\n      state.menu.codeKeyMap = action.payload;\n      SettingModel.setValue(state);\n    },\n\n    setTabSize(state, action: PayloadAction<TabSize>) {\n      state.menu.tabSize = action.payload;\n      SettingModel.setValue(state);\n    },\n  },\n});\n\nexport const { setCodeTheme, setCodeKeyMap, setTabSize } = settingSlice.actions;\nexport default settingSlice.reducer;\n","export default class BrowserStorage<T> {\n  key: string;\n\n  storage: Storage;\n\n  constructor(key: string) {\n    this.key = key;\n    this.storage = window.localStorage;\n  }\n\n  getValue(initial: T): T {\n    try {\n      return JSON.parse(this.storage[this.key]) as T;\n    } catch {\n      return initial;\n    }\n  }\n\n  setValue(value: T) {\n    this.storage[this.key] = JSON.stringify(value);\n  }\n}\n","import React from 'react';\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { CodeTheme, CodeKeyMap, TabSize, setCodeTheme, setCodeKeyMap, setTabSize } from 'features/settingSlices';\nimport { AppState } from 'app/rootReducer';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '400px',\n      minWidth: '320px',\n      borderRadius: '4px',\n    },\n    header: {\n      borderBottom: `1px solid ${theme.palette.text.disabled}`,\n    },\n    title: {\n      padding: '12px 16px',\n    },\n    list: {\n      padding: '12px 24px',\n      lineHeight: '19px',\n    },\n    item: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      fontSize: '15px',\n      marginTop: '12px',\n    },\n    itemTitle: {\n      whiteSpace: 'nowrap',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    itemInfo: {\n      minWidth: 140,\n      paddingLeft: '12px',\n      border: '1px solid #aaa',\n      borderRadius: '4px',\n      textAlign: 'left',\n    },\n  }),\n);\n\nconst Settings = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const menu = useSelector((state: AppState) => state.settingState.menu);\n\n  function handleChange<T>(action: ActionCreatorWithPayload<T>) {\n    return (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n      dispatch(action(event.target.value as T));\n    };\n  }\n\n  return (\n    <div className={classes.root}>\n      <Box>\n        <header className={classes.header}>\n          <Typography className={classes.title} variant=\"h6\">Settings</Typography>\n        </header>\n      </Box>\n      <div className={classes.list}>\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Theme</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.codeTheme} onChange={handleChange(setCodeTheme)} disableUnderline displayEmpty>\n              {Object.entries(CodeTheme).map(([display, theme]: [string, string]) => {\n                return (\n                  <MenuItem value={theme} key={theme}>\n                    {display}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Key binding</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.codeKeyMap} onChange={handleChange(setCodeKeyMap)} disableUnderline displayEmpty>\n              {Object.entries(CodeKeyMap).map(([display, codeKeyMap]: [string, string]) => {\n                return (\n                  <MenuItem value={codeKeyMap} key={codeKeyMap}>\n                    {display}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Tab Size</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.tabSize} onChange={handleChange(setTabSize)} disableUnderline displayEmpty>\n              {Object.entries(TabSize).map(([key, tabSize]: [string, string]) => {\n                return (\n                  <MenuItem value={tabSize} key={key}>\n                    {`${tabSize} spaces`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState, useEffect, useCallback, MouseEvent, ChangeEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Popover from '@material-ui/core/Popover';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { AppState } from 'app/rootReducer';\nimport { CodeMode, setCodeMode } from 'features/docSlices';\nimport Settings from './Settings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '6px',\n      position: 'relative',\n    },\n    formControl: {\n      minWidth: 140,\n      border: `1px solid ${theme.palette.grey['800']}`,\n      borderRadius: '4px',\n    },\n    selectEmpty: {\n      paddingLeft: '12px',\n    },\n    settingsButton: {\n      float: 'right',\n      padding: '7px',\n    },\n  }),\n);\n\nexport default function Toolbar() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const doc = useSelector((state: AppState) => state.docState.doc);\n  const codeMode = useSelector((state:AppState) => state.docState.mode);\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | undefined>();\n\n  useEffect(() => {\n    if (!doc) {\n      return () => {};\n    }\n\n    const unsubscribe = doc.subscribe((event: any) => {\n      if (event.name === 'remote-change') {\n        dispatch(setCodeMode(doc.getRootObject().mode || CodeMode.PlainText));\n      }\n    });\n\n    return () => { unsubscribe(); };\n  }, [doc]);\n\n  const handleCodeModeChange = useCallback((event: ChangeEvent<{ name?: string; value: unknown }>) => {\n    if (!doc) {\n      return;\n    }\n    const mode = event.target.value as CodeMode;\n    doc.update((root: any) => {\n      // eslint-disable-next-line no-param-reassign\n      root.mode = mode;\n    });\n\n    dispatch(setCodeMode(mode));\n  }, [doc, dispatch]);\n\n  const handleSettingsClick = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n  const handleSettingsClose = useCallback(() => {\n    setAnchorEl(undefined);\n  }, []);\n  const isOpen = Boolean(anchorEl);\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <Tooltip title=\"Syntax\">\n          <Select\n            name=\"codeMode\"\n            value={codeMode}\n            onChange={handleCodeModeChange}\n            className={classes.selectEmpty}\n            disableUnderline\n            displayEmpty\n          >\n            {Object.entries(CodeMode).map(([display, mode]: [string, string]) => {\n              return (\n                <MenuItem value={mode} key={mode}>\n                  {display}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </Tooltip>\n      </FormControl>\n      <Tooltip title=\"Settings\">\n        <IconButton className={classes.settingsButton} aria-label=\"settings\" onClick={handleSettingsClick}>\n          <SettingsIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id={isOpen ? 'simple-popover' : undefined}\n        open={isOpen}\n        anchorEl={anchorEl}\n        onClose={handleSettingsClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Settings />\n      </Popover>\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum ConnectionStatus {\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface Peer {\n  id: string;\n  color: string;\n  status: ConnectionStatus;\n}\n\nexport interface PeerState {\n  peers: {\n    [id: string]: Peer;\n  };\n}\n\nconst initialPeerState: PeerState = {\n  peers: {},\n};\n\nconst peerSlice = createSlice({\n  name: 'peer',\n  initialState: initialPeerState,\n  reducers: {\n    connectPeer(state, action: PayloadAction<{ id: string; color: string; status: ConnectionStatus }>) {\n      const { id, color, status } = action.payload;\n      state.peers[id] = {\n        id,\n        color,\n        status,\n      };\n    },\n    disconnectPeer(state, action: PayloadAction<string>) {\n      state.peers[action.payload].status = ConnectionStatus.Disconnected;\n    },\n  },\n});\n\nexport const { connectPeer, disconnectPeer } = peerSlice.actions;\nexport default peerSlice.reducer;\n","import invert from 'invert-color';\n\n// TODO(hackerwins): Replace with ActorID from yorkie-js-sdk\ntype ActorID = string;\n\n// REF https://github.com/FujitsuLaboratories/cattaz/blob/master/src/AppEnabledWikiEditorCodeMirror.jsx#L24\nexport default class Cursor {\n  private id: ActorID;\n\n  private color: string;\n\n  private height: number;\n\n  private marker?: CodeMirror.TextMarker;\n\n  private lineMarker?: CodeMirror.TextMarker;\n\n  private nameRemoveTimeMap: Map<ActorID, ReturnType<typeof setTimeout>>;\n\n  private nameAnimationDelay: number;\n\n  private nameAnimationDuration: number;\n\n  private nameRemoveTime: number;\n\n  constructor(id: ActorID, color: string) {\n    this.id = id;\n    this.color = color;\n    this.height = 0;\n\n    this.nameRemoveTimeMap = new Map();\n    this.nameAnimationDelay = 1;\n    this.nameAnimationDuration = 0.2;\n    this.nameRemoveTime = (this.nameAnimationDuration + this.nameAnimationDelay) * 1000;\n  }\n\n  updateCursor(cm: CodeMirror.Editor, cursorPos: CodeMirror.Position) {\n    this.removeCursor();\n    const cursorCoords = cm.cursorCoords(cursorPos);\n    const cursorHolder = document.createElement('span');\n    this.height = cursorCoords.bottom - cursorCoords.top;\n\n    cursorHolder.classList.add('codePair-cursor');\n    cursorHolder.style.borderLeftColor = this.color;\n    cursorHolder.style.height = `${this.height}px`;\n\n    this.marker = cm.setBookmark(cursorPos, {\n      widget: cursorHolder,\n      insertLeft: true,\n    });\n\n    this.showCursorNameReserve(cursorHolder);\n  }\n\n  updateLine(cm: CodeMirror.Editor, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) {\n    this.removeLine();\n\n    this.lineMarker = cm.getDoc().markText(fromPos, toPos, {\n      css: `background-color : ${this.color}; opacity:0.7`,\n    });\n  }\n\n  // when user's cursor hover, show name\n  private showCursorNameReserve(cursorHolder: Element) {\n    const nameHolder = document.createElement('span');\n    nameHolder.classList.add('codePair-name');\n\n    cursorHolder.addEventListener('mouseenter', () => {\n      if (this.nameRemoveTimeMap.has(this.id)) {\n        clearTimeout(this.nameRemoveTimeMap.get(this.id)!);\n      }\n\n      nameHolder.textContent = this.id;\n      nameHolder.style.top = `-${this.height}px`;\n      nameHolder.style.backgroundColor = this.color;\n      nameHolder.style.color = invert(this.color, true);\n\n      /**\n       * nameEl is being reused.\n       * In order to keep the name visible while the mouse is hovering,\n       * It need to delete the css class containing animation when it is mouseenter and add it when it is mouseleave.\n       */\n      nameHolder.classList.remove('text-remove');\n      cursorHolder.appendChild(nameHolder);\n    });\n\n    cursorHolder.addEventListener('mouseleave', () => {\n      nameHolder.classList.add('text-remove');\n      nameHolder.style.animationDuration = `${this.nameAnimationDuration}s`;\n      nameHolder.style.animationDelay = `${this.nameAnimationDelay}s`;\n\n      this.removeNameReserve(nameHolder);\n    });\n  }\n\n  // After animate, It should actually be deleted it.\n  private removeNameReserve(nameHolder: HTMLSpanElement) {\n    const timeoutId = setTimeout(() => {\n      nameHolder.parentNode!.removeChild(nameHolder);\n      this.nameRemoveTimeMap.delete(this.id);\n    }, this.nameRemoveTime);\n\n    this.nameRemoveTimeMap.set(this.id, timeoutId);\n  }\n\n  removeCursor() {\n    if (this.marker) {\n      this.marker.clear();\n      this.marker = undefined;\n    }\n  }\n\n  removeLine() {\n    if (this.lineMarker) {\n      this.lineMarker.clear();\n      this.lineMarker = undefined;\n    }\n  }\n}\n\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport randomColor from 'randomcolor';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { AppState } from 'app/rootReducer';\nimport { attachDoc, attachDocLoading, CodeMode, setCodeMode } from 'features/docSlices';\nimport { ConnectionStatus, connectPeer, disconnectPeer } from 'features/peerSlices';\n\nimport Cursor from './Cursor';\n\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/edit/closetag';\n\nimport 'codemirror/mode/go/go';\nimport 'codemirror/mode/dart/dart';\nimport 'codemirror/mode/ruby/ruby';\nimport 'codemirror/mode/rust/rust';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/clojure/clojure';\nimport 'codemirror/mode/javascript/javascript';\n\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/keymap/emacs';\nimport 'codemirror/keymap/vim';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/material.css';\nimport './editor.css';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    height: 'calc(100vh - 110px)',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nexport default function Editor(props: { docKey: string }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const { docKey } = props;\n  const doc = useSelector((state: AppState) => state.docState.doc);\n  const codeMode = useSelector((state: AppState) => state.docState.mode);\n  const client = useSelector((state: AppState) => state.docState.client);\n  const loading = useSelector((state: AppState) => state.docState.loading);\n  const errorMessage = useSelector((state: AppState) => state.docState.errorMessage);\n  const peerClients = useSelector((state: AppState) => state.peerState.peers);\n  const menu = useSelector((state: AppState) => state.settingState.menu);\n  const cursorMapRef = useRef<Map<string, Cursor>>(new Map());\n\n  const connectClient = (clientId: string) => {\n    const existedClient = peerClients[clientId];\n\n    let color: string;\n    if (existedClient && existedClient.status === ConnectionStatus.Disconnected) {\n      color = existedClient.color;\n    } else {\n      color = randomColor();\n    }\n\n    cursorMapRef.current.set(clientId, new Cursor(clientId, color));\n    dispatch(connectPeer({ id: clientId, color, status: ConnectionStatus.Connected }));\n  };\n\n  // Attach document\n  useEffect(() => {\n    async function attachDocAsync() {\n      dispatch(attachDocLoading(true));\n      const result = (await dispatch(attachDoc(docKey))) as any;\n      dispatch(setCodeMode(result.payload.document.getRootObject().mode || CodeMode.PlainText));\n      dispatch(attachDocLoading(false));\n    }\n    attachDocAsync();\n  }, [docKey, dispatch]);\n\n  // Subscribe other client\n  useEffect(() => {\n    if (!client || !doc) {\n      return () => {};\n    }\n\n    const unsubscribe = client.subscribe((event: any) => {\n      if (event.name === 'peers-changed') {\n        const newPeerClients = event.value[doc.getKey().toIDString()];\n\n        for (const clientId of Object.keys(peerClients)) {\n          if (newPeerClients[clientId] && peerClients[clientId].status === ConnectionStatus.Connected) {\n            continue;\n          }\n          if (cursorMapRef.current.has(clientId)) {\n            cursorMapRef.current.get(clientId)!.removeCursor();\n            cursorMapRef.current.delete(clientId);\n          }\n          dispatch(disconnectPeer(clientId));\n        }\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [client, doc, peerClients, dispatch]);\n\n  if (loading) {\n    return (\n      <Box className={classes.root}>\n        <CircularProgress color=\"inherit\" />\n      </Box>\n    );\n  }\n\n  if (errorMessage || !client || !doc) {\n    return (\n      <div className={classes.root}>\n        <Snackbar open anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n          <Alert severity=\"warning\">{errorMessage || 'fail to attach document'}</Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n\n  return (\n    <CodeMirror\n      options={{\n        mode: codeMode,\n        theme: menu.codeTheme,\n        keyMap: menu.codeKeyMap,\n        tabSize: Number(menu.tabSize),\n        lineNumbers: true,\n        lineWrapping: true,\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n      }}\n      editorDidMount={(editor: CodeMirror.Editor) => {\n        editor.focus();\n        const updateCursor = (clientId: string, pos: CodeMirror.Position) => {\n          const cursor = cursorMapRef.current.get(clientId);\n          cursor!.updateCursor(editor, pos);\n        };\n\n        const updateLine = (clientId: string, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) => {\n          const cursor = cursorMapRef.current.get(clientId);\n          cursor!.updateLine(editor, fromPos, toPos);\n        };\n\n        doc.subscribe((event: any) => {\n          if (event.name === 'remote-change') {\n            event.value.forEach((change: any) => {\n              const { actor } = change.getID();\n              if (actor !== client.getID()) {\n                if (!cursorMapRef.current.has(actor)) {\n                  connectClient(actor);\n                  updateCursor(actor, editor.posFromIndex(0));\n                  // TODO Load user's cursor position\n                }\n              }\n            });\n          }\n        });\n\n        // When there is a document modification connected to the yorkie\n        const root = doc.getRootObject() as any;\n        root.content.onChanges((changes: any) => {\n          changes.forEach((change: any) => {\n            const { actor, from, to } = change;\n            if (change.type === 'content') {\n              const content = change.content || '';\n\n              if (actor !== client.getID()) {\n                const fromPos = editor.posFromIndex(from);\n                const toPos = editor.posFromIndex(to);\n                editor.replaceRange(content, fromPos, toPos, 'yorkie');\n              }\n            } else if (change.type === 'selection') {\n              if (actor !== client.getID()) {\n                if (!cursorMapRef.current.has(actor)) {\n                  connectClient(actor);\n                }\n\n                let fromPos = editor.posFromIndex(from);\n                let toPos = editor.posFromIndex(to);\n                updateCursor(actor, toPos);\n\n                if (from > to) {\n                  [toPos, fromPos] = [fromPos, toPos];\n                }\n                updateLine(actor, fromPos, toPos);\n              }\n            }\n          });\n        });\n\n        // We need to subtract the height of NavBar.\n        editor.setSize('auto', 'calc(100vh - 110px)');\n        editor.setValue(root.content.getValue());\n      }}\n      // Notifying other clients to move the cursor\n      onSelection={(editor: CodeMirror.Editor, data: CodeMirror.EditorSelectionChange) => {\n        if (data.origin === undefined) {\n          return;\n        }\n\n        const from = editor.indexFromPos(data.ranges[0].anchor);\n        const to = editor.indexFromPos(data.ranges[0].head);\n\n        doc.update((root: any) => {\n          root.content.updateSelection(from, to);\n        });\n      }}\n      // Edit the yorkie document\n      onBeforeChange={(editor: CodeMirror.Editor, change: CodeMirror.EditorChange) => {\n        if (change.origin === 'yorkie' || change.origin === 'setValue') {\n          return;\n        }\n\n        const from = editor.indexFromPos(change.from);\n        const to = editor.indexFromPos(change.to);\n        const content = change.text.join('\\n');\n\n        doc.update((root: any) => {\n          root.content.edit(from, to, content);\n        });\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport NavBar from 'components/NavBar';\nimport Toolbar from 'components/Toolbar';\nimport Editor from 'components/Editor';\n\ntype DocPageProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function DocPage(props: RouteComponentProps<DocPageProps>) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const { docKey } = params;\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <Toolbar />\n      <Editor docKey={docKey} />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\n\nimport docReducer from 'features/docSlices';\nimport peerReducer from 'features/peerSlices';\nimport settingReducer from 'features/settingSlices';\n\nconst rootReducer = combineReducers({\n  docState: docReducer,\n  peerState: peerReducer,\n  settingState: settingReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { AppState } from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['doc/attach/fulfilled'],\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n    immutableCheck: {\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n  }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, AppState, unknown, Action<string>>;\n\nexport default store;\n","import React, { useMemo, useCallback } from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport DocPage from 'pages/DocPage';\nimport store from './store';\n\nimport './App.css';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light',\n    },\n  }), [prefersDarkMode]);\n\n  const handleRender = useCallback(() => {\n    return <Redirect to={`/${Math.random().toString(36).substring(7)}`} />;\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Router>\n          <Route path=\"/\" exact render={handleRender} />\n          <Route path=\"/:docKey\" exact component={DocPage} />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'app/App';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}