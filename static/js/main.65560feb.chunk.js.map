{"version":3,"sources":["actions/docActions.ts","actions/peerActions.ts","reducers/docReducer.ts","reducers/peerReducer.ts","store/store.ts","components/NavBar.tsx","components/Editor/ClientCursor.ts","components/Editor/CodeEditor.tsx","pages/DocPage.tsx","theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DocActionTypes","ConnectionStatus","PeerActionTypes","initialDocState","client","doc","loading","errorMessage","initialPeerState","peers","rootReducer","combineReducers","docState","state","action","type","ATTACH_DOC","LOAD_DOC","ERROR","peerState","existedClient","id","CONNECT_PEER","color","status","Connected","DISCONNECT_PEER","Disconnected","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","Typography","variant","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","MenuItem","markerRemoveMap","Map","ClientCursor","height","marker","lineMarker","this","cm","cursorPos","removeCursor","cursorCoords","cursorElement","document","createElement","bottom","top","style","borderLeftStyle","borderLeftWidth","borderLeftColor","padding","showCursorNameReserve","setBookmark","widget","insertLeft","fromPos","toPos","removeLine","getDoc","markText","css","parentEl","nameElement","addEventListener","textContent","classList","remove","left","backgroundColor","borderRadius","invert","appendChild","animationDuration","animationDelay","removeNameReserve","el","has","clearTimeout","get","timeoutId","window","setTimeout","parentNode","removeChild","delete","set","clear","width","marginTop","CodeEditor","props","dispatch","useDispatch","useSelector","peerClients","otherClientsCursor","useRef","connectClient","clientId","randomColor","newClientCursor","of","current","AddPeer","useEffect","shouldLoad","docKey","a","yorkie","createClient","process","activate","createDocument","attach","update","content","createText","sync","console","error","message","disconnectClient","unsubscribe","subscribe","name","newPeerClientsId","value","getKey","toIDString","setNewPeerClientsId","Set","Object","keys","Box","CircularProgress","Alert","severity","options","mode","lineNumbers","editorDidMount","editor","updateCursor","pos","updateLine","forEach","change","actor","getID","posFromIndex","getRootObject","onChanges","changes","from","to","replaceRange","setSize","setValue","getValue","onSelection","data","undefined","origin","indexFromPos","ranges","anchor","head","updateSelection","onBeforeChange","text","join","edit","DocPage","match","params","createMuiTheme","palette","store","createStore","applyMiddleware","thunk","App","ThemeProvider","CssBaseline","path","exact","render","Math","random","toString","substring","component","location","hostname","ReactDOM","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.65560feb.chunk.js","sourcesContent":["import { ActionCreator, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport yorkie, { Client, Document } from 'yorkie-js-sdk';\n\nimport { IDocState } from '../reducers/docReducer';\n\nexport enum DocActionTypes {\n  ATTACH_DOC = 'ATTACH_DOC',\n  LOAD_DOC = 'LOAD_DOC',\n  ERROR = 'ERROR',\n}\n\nexport interface AttachDocAction {\n  type: DocActionTypes.ATTACH_DOC;\n  client: Client;\n  doc: Document;\n}\n\nexport interface ILoadDocAction {\n  type: DocActionTypes.LOAD_DOC;\n  loading: boolean;\n}\n\nexport interface IErrorAction {\n  type: DocActionTypes.ERROR;\n  errorMessage: string;\n}\nexport type DocActions = AttachDocAction | ILoadDocAction | IErrorAction;\n\n/*<Promise<Return Type>, State Interface, Type of Param, Type of Action> */\nexport const AttachDocAction: ActionCreator<ThunkAction<\n  Promise<any>,\n  IDocState,\n  null,\n  AttachDocAction\n>> = (docKey: string) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const client = yorkie.createClient(\n        `${process.env.REACT_APP_YORKIE_RPC_ADDR}`,\n      );\n      await client.activate();\n\n      const doc = yorkie.createDocument('codepairs', docKey);\n      await client.attach(doc);\n\n      doc.update((root: any) => {\n        if (!root.content) {\n          root.createText('content');\n        }\n      });\n      await client.sync();\n\n      dispatch({ type: DocActionTypes.ATTACH_DOC, doc, client });\n    } catch (err) {\n      console.error(err);\n      dispatch({ type: DocActionTypes.ERROR, errorMessage: err.message });\n    }\n\n    dispatch({ type: DocActionTypes.LOAD_DOC, loading: false });\n  };\n};\n\nexport const loadDocAction: ActionCreator<ThunkAction<\n  any,\n  IDocState,\n  null,\n  ILoadDocAction\n>> = (shouldLoad: boolean) => (dispatch: Dispatch) =>\n  dispatch({ type: DocActionTypes.LOAD_DOC, loading: shouldLoad });\n","export enum ConnectionStatus {\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface Peer {\n  id: string;\n  color: string;\n  status: ConnectionStatus;\n}\n\nexport enum PeerActionTypes {\n  CONNECT_PEER = 'CONNECT_PEER',\n  DISCONNECT_PEER = 'DISCONNECT_PEER',\n}\n\nexport interface ConnectPeerAction {\n  type: PeerActionTypes.CONNECT_PEER;\n  id: string;\n  color: string;\n}\n\nexport interface DisconnectPeerAction {\n  type: PeerActionTypes.DISCONNECT_PEER;\n  id: string;\n}\n\nexport const AddPeer = (id: string, color: string): ConnectPeerAction => ({\n  type: PeerActionTypes.CONNECT_PEER,\n  id,\n  color,\n});\n\nexport const DisconnectPeer = (id: string): DisconnectPeerAction => ({\n  type: PeerActionTypes.DISCONNECT_PEER,\n  id,\n});\n\nexport type PeerActions = ConnectPeerAction | DisconnectPeerAction;\n","import { Reducer } from 'redux';\nimport { Client, Document } from 'yorkie-js-sdk';\n\nimport { DocActionTypes, DocActions } from '../actions/docActions';\n\nexport interface IDocState {\n  client: Client | null;\n  doc: Document | null;\n  loading: boolean;\n  errorMessage: string;\n}\n\nconst initialDocState: IDocState = {\n  client: null,\n  doc: null,\n  loading: false,\n  errorMessage: '',\n};\n\nexport const docReducer: Reducer<IDocState, DocActions> = (\n  state = initialDocState,\n  action,\n) => {\n  switch (action.type) {\n    case DocActionTypes.ATTACH_DOC: {\n      return {\n        ...state,\n        client: action.client,\n        doc: action.doc,\n      };\n    }\n    case DocActionTypes.LOAD_DOC: {\n      return {\n        ...state,\n        loading: action.loading,\n      };\n    }\n    case DocActionTypes.ERROR: {\n      return {\n        ...state,\n        errorMessage: action.errorMessage,\n        doc: null,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { Reducer } from 'redux';\n\nimport { Peer, PeerActionTypes, PeerActions, ConnectionStatus } from '../actions/peerActions';\n\nexport interface PeerState {\n  peers: {\n    [id: string]: Peer;\n  };\n}\n\nconst initialPeerState: PeerState = {\n  peers: {},\n};\n\nexport const peerReducer: Reducer<PeerState, PeerActions> = (state = initialPeerState, action: PeerActions) => {\n  const existedClient = state.peers[action.id];\n  switch (action.type) {\n    case PeerActionTypes.CONNECT_PEER: {\n      return {\n        ...state,\n        peers: {\n          ...state.peers,\n          [action.id]: {\n            id: action.id,\n            color: action.color,\n            status: ConnectionStatus.Connected,\n          },\n        },\n      };\n    }\n\n    case PeerActionTypes.DISCONNECT_PEER: {\n      const client = {\n        ...existedClient,\n        status: ConnectionStatus.Disconnected,\n      };\n\n      return {\n        ...state,\n        peers: {\n          ...state.peers,\n          [action.id]: client,\n        },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","/**\n * Imports from Redux:\n * applyMiddleware: Applies middleware to the dispatch method of the Redux store\n * combineReducers: Merges reducers into one\n * createStore: Creates a Redux store that holds the state tree\n * Store: The TS Type used for the store, or state tree\n **/\nimport { applyMiddleware, combineReducers, createStore, Store } from 'redux';\n\n/**\n * Thunk\n * Redux Thunk middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods dispatch and getState as parameters.\n **/\nimport thunk from 'redux-thunk';\n// Import reducers and state type\nimport { IDocState, docReducer } from '../reducers/docReducer';\nimport { PeerState, peerReducer } from '../reducers/peerReducer';\n\n// Create an interface for the application state\nexport interface IAppState {\n  docState: IDocState;\n  peerState: PeerState;\n}\n\n// Create the root reducer\nconst rootReducer = combineReducers<IAppState>({\n  docState: docReducer,\n  peerState: peerReducer,\n});\n\n// Create a configure store function of type `IAppState`\nexport default function configureStore(): Store<IAppState, any> {\n  const store = createStore(rootReducer, undefined, applyMiddleware(thunk));\n  return store;\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Yorkie CodePair\n          </Typography>\n          <div>\n            <IconButton\n              aria-label=\"settings\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <SettingsIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose}>Theme</MenuItem>\n              <MenuItem onClick={handleClose}>Editor Mode</MenuItem>\n              <MenuItem onClick={handleClose}>Tab Size</MenuItem>\n              <MenuItem onClick={handleClose}>Font Size</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import invert from 'invert-color';\n\nconst markerRemoveMap = new Map<string, number>();\n\nconst duration = 0.2;\nconst delay = 1;\nconst SECOND = 1000;\nconst REMOVE_TIME = (duration + delay) * SECOND;\n\n// REF https://github.com/FujitsuLaboratories/cattaz/blob/master/src/AppEnabledWikiEditorCodeMirror.jsx#L24\nclass ClientCursor {\n  id: string; // actor id\n  color: string;\n  height: number;\n  marker: CodeMirror.TextMarker | null;\n  lineMarker: CodeMirror.TextMarker | null;\n\n  private constructor(id: string, color: string) {\n    this.id = id;\n    this.color = color;\n    this.height = 0;\n    this.marker = null;\n    this.lineMarker = null;\n  }\n\n  static of(id: string, color: string) {\n    return new ClientCursor(id, color);\n  }\n\n  updateCursor(cm: CodeMirror.Editor, cursorPos: CodeMirror.Position) {\n    this.removeCursor();\n    const cursorCoords = cm.cursorCoords(cursorPos);\n    const cursorElement = document.createElement('span');\n    this.height = cursorCoords.bottom - cursorCoords.top;\n\n    cursorElement.style.position = 'absolute';\n    cursorElement.style.borderLeftStyle = 'solid';\n    cursorElement.style.borderLeftWidth = '2.5px';\n    cursorElement.style.borderLeftColor = this.color;\n    cursorElement.style.height = `${this.height}px`;\n    cursorElement.style.padding = '0px';\n\n    this.showCursorNameReserve(cursorElement);\n    this.marker = cm.setBookmark(cursorPos, {\n      widget: cursorElement,\n      insertLeft: true,\n    });\n  }\n\n  updateLine(\n    cm: CodeMirror.Editor,\n    fromPos: CodeMirror.Position,\n    toPos: CodeMirror.Position,\n  ) {\n    this.removeLine();\n    this.lineMarker = cm.getDoc().markText(fromPos, toPos, {\n      css: `background-color : ${this.color}; opacity:0.7`,\n    });\n  }\n\n  // when user's cursor hover, show name\n  private showCursorNameReserve(parentEl: Element) {\n    const nameElement = document.createElement('span');\n\n    parentEl.addEventListener('mouseenter', () => {\n      nameElement.textContent = this.id;\n      nameElement.classList.remove('text-remove');\n      nameElement.style.position = 'absolute';\n      nameElement.style.top = `-${this.height}px`;\n      nameElement.style.left = '-2px';\n      nameElement.style.backgroundColor = this.color;\n      nameElement.style.padding = '1px 4px';\n      nameElement.style.borderRadius = '4px 4px 4px 0px';\n      nameElement.style.color = invert(this.color, true);\n\n      parentEl.appendChild(nameElement);\n    });\n\n    parentEl.addEventListener('mouseleave', () => {\n      nameElement.className = 'text-remove';\n      nameElement.style.animationDuration = `${duration}s`;\n      nameElement.style.animationDelay = `${delay}s`;\n\n      this.removeNameReserve(nameElement);\n    });\n  }\n\n  // After animate, It should actually be deleted it.\n  private removeNameReserve(el: Element) {\n    if (markerRemoveMap.has(this.id)) {\n      clearTimeout(markerRemoveMap.get(this.id));\n    }\n\n    const timeoutId = window.setTimeout(() => {\n      if (el.parentNode) {\n        el.parentNode.removeChild(el);\n        markerRemoveMap.delete(this.id);\n      }\n    }, REMOVE_TIME);\n\n    markerRemoveMap.set(this.id, timeoutId);\n  }\n\n  removeCursor() {\n    if (this.marker) {\n      this.marker.clear();\n      this.marker = null;\n    }\n  }\n\n  removeLine() {\n    if (this.lineMarker) {\n      this.lineMarker.clear();\n      this.lineMarker = null;\n    }\n  }\n}\n\nexport default ClientCursor;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport randomColor from 'randomcolor';\n\nimport ClientCursor from './ClientCursor';\n\nimport { IAppState } from '../../store/store';\nimport { AttachDocAction, loadDocAction } from '../../actions/docActions';\nimport { ConnectionStatus, AddPeer, DisconnectPeer } from '../../actions/peerActions';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport './CodeEditor.css';\n\ntype CodeEditorProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CodeEditor(props: CodeEditorProps) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const doc = useSelector((state: IAppState) => state.docState.doc);\n  const client = useSelector((state: IAppState) => state.docState.client);\n  const loading = useSelector((state: IAppState) => state.docState.loading);\n  const errorMessage = useSelector((state: IAppState) => state.docState.errorMessage);\n  const peerClients = useSelector((state: IAppState) => state.peerState.peers);\n  const otherClientsCursor = useRef<Map<string, ClientCursor>>(new Map());\n\n  const connectClient = (clientId: string) => {\n    const existedClient = peerClients[clientId];\n\n    let color: string;\n    if (existedClient && existedClient.status === ConnectionStatus.Disconnected) {\n      color = existedClient.color;\n    } else {\n      color = randomColor();\n    }\n\n    const newClientCursor = ClientCursor.of(clientId, color);\n    otherClientsCursor.current.set(clientId, newClientCursor);\n    dispatch(AddPeer(clientId, color));\n  };\n\n  // Attach document\n  useEffect(() => {\n    dispatch(loadDocAction(true));\n    dispatch(AttachDocAction(props.docKey));\n  }, [props.docKey, dispatch]);\n\n  // Subscribe other client\n  useEffect(() => {\n    if (!client || !doc) {\n      return;\n    }\n\n    const disconnectClient = (clientId: string) => {\n      if (otherClientsCursor.current.has(clientId)) {\n        otherClientsCursor.current.get(clientId)!.removeCursor();\n        otherClientsCursor.current.delete(clientId);\n      }\n      dispatch(DisconnectPeer(clientId));\n    };\n\n    const unsubscribe = client.subscribe((event: any) => {\n      if (event.name === 'documents-watching-peer-changed') {\n        const newPeerClientsId: string[] = event.value[doc.getKey().toIDString()];\n        const setNewPeerClientsId = new Set(newPeerClientsId);\n\n        for (const clientId of Object.keys(peerClients)) {\n          if (setNewPeerClientsId.has(clientId) && peerClients[clientId].status === ConnectionStatus.Connected) {\n            continue;\n          }\n          disconnectClient(clientId);\n        }\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [client, doc, peerClients, dispatch]);\n\n  if (loading) {\n    return (\n      <Box height=\"100%\">\n        <CircularProgress color=\"secondary\" />\n      </Box>\n    );\n  }\n\n  if (errorMessage || client === null || doc === null) {\n    return (\n      <div className={classes.root}>\n        <Alert severity=\"error\">{errorMessage || 'fail to attach document'}</Alert>\n      </div>\n    );\n  }\n\n  return (\n    <CodeMirror\n      options={{ mode: 'xml', theme: 'monokai', lineNumbers: true }}\n      editorDidMount={(editor: CodeMirror.Editor) => {\n        const updateCursor = (clientId: string, pos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateCursor(editor, pos);\n        };\n\n        const updateLine = (clientId: string, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateLine(editor, fromPos, toPos);\n        };\n\n        // When the user first accesses the document, the cursor is displayed.\n        doc?.subscribe((event: any) => {\n          if (event.name === 'remote-change') {\n            event.value.forEach((change: any) => {\n              const actor = change.id.actor;\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                  updateCursor(actor, editor.posFromIndex(0));\n                  // TODO Load user's cursor position\n                }\n              }\n            });\n          }\n        });\n\n        // When there is a document modification connected to the yorkie\n        const root = doc.getRootObject() as any;\n        root.content.onChanges((changes: any) => {\n          for (const change of changes) {\n            const actor = change.actor;\n            const from = change.from;\n            const to = change.to;\n            if (change.type === 'content') {\n              const content = change.content || '';\n\n              if (actor !== client.getID()) {\n                const fromPos = editor.posFromIndex(from);\n                const toPos = editor.posFromIndex(to);\n                editor.replaceRange(content, fromPos, toPos, 'yorkie');\n              }\n            } else if (change.type === 'selection') {\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                }\n\n                let fromPos = editor.posFromIndex(from);\n                let toPos = editor.posFromIndex(to);\n                updateCursor(actor, toPos);\n\n                if (from > to) {\n                  [toPos, fromPos] = [fromPos, toPos];\n                }\n                updateLine(actor, fromPos, toPos);\n              }\n            }\n          }\n        });\n\n        // We need to subtract the height of NavBar.\n        editor.setSize('auto', 'calc(100vh - 64px)');\n        editor.setValue(root.content.getValue());\n      }}\n      // Notifying other clients to move the cursor\n      onSelection={(editor: CodeMirror.Editor, data: CodeMirror.EditorSelectionChange) => {\n        if (data.origin === undefined) {\n          return;\n        }\n\n        const from = editor.indexFromPos(data.ranges[0].anchor);\n        const to = editor.indexFromPos(data.ranges[0].head);\n\n        doc?.update((root: any) => {\n          root.content.updateSelection(from, to);\n        });\n      }}\n      // Edit the yorkie document\n      onBeforeChange={(editor: CodeMirror.Editor, change: CodeMirror.EditorChange) => {\n        if (change.origin === 'yorkie' || change.origin === 'setValue') {\n          return;\n        }\n\n        const from = editor.indexFromPos(change.from);\n        const to = editor.indexFromPos(change.to);\n        const content = change.text.join('\\n');\n\n        doc?.update((root: any) => {\n          root.content.edit(from, to, content);\n        });\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport NavBar from '../components/NavBar';\nimport CodeEditor from '../components/Editor/CodeEditor';\n\ntype DocPageProps = {\n  docKey: string\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function DocPage(props: RouteComponentProps<DocPageProps>) {\n  const classes = useStyles();\n  const docKey = props.match.params.docKey;\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <CodeEditor docKey={docKey} />\n    </div>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport configureStore from './store/store';\nimport DocPage from './pages/DocPage';\nimport theme from './theme';\n\nimport './App.css';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Router>\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return (\n                <Redirect to={`/${Math.random().toString(36).substring(7)}`} />\n              );\n            }}\n          />\n          <Route path=\"/:docKey\" exact component={DocPage} />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}