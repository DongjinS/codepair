{"version":3,"sources":["components/Popover/index.tsx","components/NavBar/PeerListItem.tsx","features/peerSlices.ts","hooks/usePeer.ts","components/NavBar/PeerList.tsx","components/NavBar/PeerGroup.tsx","components/NavBar/index.tsx","features/docSlices.ts","features/settingSlices.ts","utils/storage.ts","components/Toolbar/Settings.tsx","components/Toolbar/index.tsx","components/Editor/Cursor.ts","components/Editor/index.tsx","pages/DocPage.tsx","app/rootReducer.ts","app/store.ts","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["Popover","anchorEl","onClose","children","isOpen","Boolean","id","undefined","open","anchorOrigin","vertical","horizontal","transformOrigin","useStyles","makeStyles","root","props","color","peer","metadata","PeerListItem","classes","ListItem","className","username","ConnectionStatus","peerSlice","createSlice","name","initialState","peers","reducers","connectPeer","state","action","payload","disconnectPeer","status","Disconnected","actions","usePeer","client","useSelector","docState","peerState","activePeers","useMemo","Object","entries","filter","peerID","getID","Connected","map","PeerList","List","Typography","length","key","group","cursor","PeerGroup","useState","setAnchorEl","handleViewList","useCallback","event","target","getAttribute","currentTarget","handleViewListClose","AvatarGroup","max","onClick","image","Tooltip","title","data-id","arrow","Avatar","alt","style","backgroundColor","src","anonymous","getImage","theme","createStyles","flexGrow","menuButton","marginRight","spacing","MenuAppBar","AppBar","position","Toolbar","variant","CodeMode","CodeTheme","CodeKeyMap","TabSize","mode","PlainText","loading","errorMessage","attachDoc","createAsyncThunk","thunkApi","a","document","activate","attach","update","content","createText","sync","rejectWithValue","message","detachDoc","_","getState","doc","detach","deactivate","docSlice","createClient","generate","animal","yorkie","process","randomColor","createDocument","attachDocLoading","setCodeMode","extraReducers","builder","addCase","fulfilled","rejected","BrowserStorage","storage","this","window","localStorage","initial","JSON","parse","value","stringify","SettingModel","getValue","menu","codeTheme","Monokai","codeKeyMap","Sublime","tabSize","Two","settingSlice","setCodeTheme","setValue","setCodeKeyMap","setTabSize","width","minWidth","borderRadius","header","borderBottom","palette","text","disabled","padding","list","lineHeight","item","display","justifyContent","fontSize","marginTop","itemTitle","whiteSpace","alignItems","itemInfo","paddingLeft","border","textAlign","Settings","dispatch","useDispatch","settingState","handleChange","Box","FormControl","Select","onChange","disableUnderline","displayEmpty","MenuItem","formControl","grey","selectEmpty","settingsButton","float","codeMode","useEffect","unsubscribe","subscribe","getRootObject","handleCodeModeChange","handleSettingsClick","handleSettingsClose","IconButton","aria-label","CursorStatus","Cursor","height","marker","lineMarker","nameRemoveTimeMap","nameAnimationDelay","nameAnimationDuration","nameRemoveTime","Deactivated","Map","cm","cursorPos","removeCursor","Activated","cursorCoords","cursorHolder","createElement","bottom","top","classList","add","borderLeftColor","setBookmark","widget","insertLeft","showCursorNameReserve","fromPos","toPos","removeLine","getDoc","markText","css","nameHolder","addEventListener","has","clearTimeout","get","textContent","invert","remove","appendChild","animationDuration","animationDelay","removeNameReserve","timeoutId","setTimeout","parentNode","removeChild","delete","set","clear","Editor","docKey","cursorMapRef","useRef","connectPeerWithCursor","clientID","current","disconnectPeerWithCursor","changedPeers","getKey","toIDString","keys","attachDocAsync","CircularProgress","options","keyMap","Number","lineNumbers","lineWrapping","autoCloseTags","autoCloseBrackets","editorDidMount","editor","focus","updateCursor","pos","forEach","change","actor","isActive","posFromIndex","onChanges","changes","from","to","type","replaceRange","updateLine","setSize","onSelection","data","origin","indexFromPos","ranges","anchor","head","updateSelection","onBeforeChange","join","edit","Snackbar","Alert","severity","DocPage","match","params","rootReducer","combineReducers","docReducer","peerReducer","settingReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","immutableCheck","App","prefersDarkMode","useMediaQuery","createMuiTheme","handleRender","Math","random","toString","substring","ThemeProvider","CssBaseline","path","exact","render","component","location","hostname","ReactDOM","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8e2dc252.chunk.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport { Popover as MaterialPopover } from '@material-ui/core';\n\ninterface PopoverProps {\n  anchorEl: Element | undefined;\n  onClose: (event: {}, reason: 'backdropClick' | 'escapeKeyDown') => void;\n  children: ReactNode;\n}\n\n/**\n * @see https://material-ui.com/components/popover/#popover\n */\nexport default function Popover({ anchorEl, onClose, children }: PopoverProps) {\n  const isOpen = Boolean(anchorEl);\n\n  return (\n    <MaterialPopover\n      id={isOpen ? 'simple-popover' : undefined}\n      open={isOpen}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'center',\n      }}\n    >\n      {children}\n    </MaterialPopover>\n  );\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Peer } from 'features/peerSlices';\n\ninterface PeerListItemProps {\n  peer: Peer;\n}\n\nconst useStyles = makeStyles(() => ({\n  root: (props: PeerListItemProps) => ({\n    color: props.peer.metadata.color,\n  }),\n}));\n\nexport default function PeerListItem(props: PeerListItemProps) {\n  const classes = useStyles(props);\n  const { peer } = props;\n\n  return <ListItem className={classes.root}>{peer.metadata.username}</ListItem>;\n}\n","import { ActorID } from 'yorkie-js-sdk';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface Metadata {\n  username: string;\n  color: string;\n  image: string; // Currently all anonymous images\n}\n\nexport enum ConnectionStatus {\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface Peer {\n  id: ActorID;\n  status: ConnectionStatus;\n  metadata: Metadata;\n}\n\nexport interface PeerState {\n  peers: {\n    /** @type {Object.<ActorID, Peer>} */\n    [id: string]: Peer;\n  };\n}\n\nconst initialPeerState: PeerState = {\n  peers: {},\n};\n\nconst peerSlice = createSlice({\n  name: 'peer',\n  initialState: initialPeerState,\n  reducers: {\n    connectPeer(state, action: PayloadAction<Peer>) {\n      const peer = action.payload;\n      state.peers[peer.id] = peer;\n    },\n    disconnectPeer(state, action: PayloadAction<ActorID>) {\n      state.peers[action.payload].status = ConnectionStatus.Disconnected;\n    },\n  },\n});\n\nexport const { connectPeer, disconnectPeer } = peerSlice.actions;\nexport default peerSlice.reducer;\n","/* eslint-disable @typescript-eslint/indent */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { AppState } from 'app/rootReducer';\nimport { ConnectionStatus } from 'features/peerSlices';\n\nexport default function usePeer() {\n  const client = useSelector((state: AppState) => state.docState.client);\n  const peers = useSelector((state: AppState) => state.peerState.peers);\n\n  const activePeers = useMemo(() => {\n    return client\n      ? Object.entries(peers)\n          .filter(([peerID, peer]) => {\n            if (client.getID() === peerID) {\n              return false;\n            }\n            return peer.status === ConnectionStatus.Connected;\n          })\n          .map(([_, clientInfo]) => clientInfo)\n      : [];\n  }, [client, peers]);\n\n  return { activePeers };\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport PeerListItem from 'components/NavBar/PeerListItem';\nimport usePeer from 'hooks/usePeer';\n\nexport default function PeerList() {\n  const { activePeers } = usePeer();\n\n  return (\n    <List>\n      <ListItem>\n        <Typography>Total {activePeers.length}</Typography>\n      </ListItem>\n      {activePeers.map((peer) => {\n        return <PeerListItem key={peer.id} peer={peer} />;\n      })}\n    </List>\n  );\n}\n","import React, { useState, useCallback, MouseEvent } from 'react';\nimport { useSelector } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport anonymous from 'anonymous-animals-gen';\n\nimport Popover from 'components/Popover';\nimport PeerList from 'components/NavBar/PeerList';\nimport { AppState } from 'app/rootReducer';\nimport usePeer from 'hooks/usePeer';\n\nconst useStyles = makeStyles(() => ({\n  group: {\n    '& > *': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nconst MAX_PEER_VIEW = 4;\n\nexport default function PeerGroup() {\n  const classes = useStyles();\n  const client = useSelector((state: AppState) => state.docState.client);\n  const { activePeers } = usePeer();\n  const [anchorEl, setAnchorEl] = useState<Element | undefined>();\n\n  const handleViewList = useCallback(\n    (event: MouseEvent<Element>) => {\n      const target = event.target as HTMLTextAreaElement;\n      if (!target.getAttribute('data-id')) {\n        setAnchorEl(event.currentTarget);\n      }\n    },\n    [setAnchorEl],\n  );\n\n  const handleViewListClose = useCallback(() => {\n    setAnchorEl(undefined);\n  }, [setAnchorEl]);\n\n  if (!client) {\n    // NOTE: We use null as an exception to prevent component from rendering.\n    return null;\n  }\n\n  return (\n    <>\n      <AvatarGroup className={classes.group} max={MAX_PEER_VIEW} onClick={handleViewList}>\n        {activePeers.map((peer) => {\n          const { username, color, image } = peer.metadata;\n          return (\n            <Tooltip key={peer.id} title={username} data-id={peer.id} arrow>\n              <Avatar alt=\"Peer Image\" style={{ backgroundColor: color }} src={anonymous.getImage(image)} />\n            </Tooltip>\n          );\n        })}\n      </AvatarGroup>\n      <Popover anchorEl={anchorEl} onClose={handleViewListClose}>\n        <PeerList />\n      </Popover>\n    </>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport PeerGroup from 'components/NavBar/PeerGroup';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Yorkie CodePair\n          </Typography>\n          <PeerGroup />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport yorkie, { Client, Document } from 'yorkie-js-sdk';\nimport anonymous from 'anonymous-animals-gen';\nimport randomColor from 'randomcolor';\nimport { AppState } from 'app/rootReducer';\n\nexport enum CodeMode {\n  PlainText = 'text/plain',\n  Go = 'go',\n  JavaScript = 'javascript',\n  Clojure = 'clojure',\n  Dart = 'dart',\n  Python = 'python',\n  Ruby = 'ruby',\n  Rust = 'rust',\n}\n\nexport interface DocState {\n  client?: Client;\n  doc?: Document;\n  mode: CodeMode;\n  loading: boolean;\n  errorMessage: string;\n}\n\nconst initialState: DocState = {\n  mode: CodeMode.PlainText,\n  loading: false,\n  errorMessage: '',\n};\n\nexport const attachDoc = createAsyncThunk<AttachDocResult, AttachDocArgs, { rejectValue: string }>(\n  'doc/attach',\n  async ({ client, document }, thunkApi) => {\n    try {\n      await client.activate();\n      await client.attach(document);\n\n      document.update((root) => {\n        if (!root.content) {\n          root.createText('content');\n        }\n      });\n      await client.sync();\n      return { document, client };\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  },\n);\n\n// If it manages multiple documents, separate the client and document\nexport const detachDoc = createAsyncThunk<Object, undefined, { rejectValue: string }>(\n  'doc/detach',\n  async (_: undefined, thunkApi) => {\n    try {\n      const { docState } = thunkApi.getState() as AppState;\n      const { client, doc } = docState;\n\n      if (client && doc) {\n        await client.detach(doc);\n        await client.deactivate();\n      }\n\n      return {};\n    } catch (err) {\n      return thunkApi.rejectWithValue(err.message);\n    }\n  },\n);\n\nconst docSlice = createSlice({\n  name: 'doc',\n  initialState,\n  reducers: {\n    createClient(state) {\n      const { name, animal } = anonymous.generate();\n      const client = yorkie.createClient(`${process.env.REACT_APP_YORKIE_RPC_ADDR}`, {\n        metadata: {\n          username: name,\n          image: animal,\n          color: randomColor(),\n        },\n      });\n      state.client = client;\n    },\n    createDocument(state, action: PayloadAction<string>) {\n      const document = yorkie.createDocument('codepairs', action.payload);\n      state.doc = document;\n    },\n    attachDocLoading(state, action: PayloadAction<boolean>) {\n      state.loading = action.payload;\n    },\n    setCodeMode(state, action: PayloadAction<CodeMode>) {\n      state.mode = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(attachDoc.fulfilled, (state, { payload }) => {\n      state.doc = payload.document;\n      state.client = payload.client;\n    });\n    builder.addCase(attachDoc.rejected, (state, { payload }) => {\n      state.errorMessage = payload!;\n    });\n  },\n});\n\nexport const { createClient, createDocument, attachDocLoading, setCodeMode } = docSlice.actions;\nexport default docSlice.reducer;\n\ntype AttachDocArgs = { document: Document; client: Client };\ntype AttachDocResult = { document: Document; client: Client };\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport BrowserStorage from 'utils/storage';\n\nexport enum CodeTheme {\n  Material = 'material',\n  Monokai = 'monokai',\n}\n\nexport enum CodeKeyMap {\n  Sublime = 'sublime',\n  Vim = 'vim',\n  Emacs = 'emacs',\n}\n\nexport enum TabSize {\n  Two = '2',\n  Four = '4',\n  Eight = '8',\n}\n\nexport type MenuKey = 'codeTheme' | 'codeKeyMap' | 'tabSize';\n\nexport type Menu = {\n  [key in MenuKey]: string;\n};\n\nexport interface SettingState {\n  menu: Menu;\n}\n\nconst SettingModel = new BrowserStorage<SettingState>('$$codepair$$setting');\n\nconst initialState: SettingState = SettingModel.getValue({\n  menu: {\n    codeTheme: CodeTheme.Monokai,\n    codeKeyMap: CodeKeyMap.Sublime,\n    tabSize: TabSize.Two,\n  },\n});\n\nconst settingSlice = createSlice({\n  name: 'setting',\n  initialState,\n  reducers: {\n\n    setCodeTheme(state, action: PayloadAction<CodeTheme>) {\n      state.menu.codeTheme = action.payload;\n      SettingModel.setValue(state);\n    },\n\n    setCodeKeyMap(state, action: PayloadAction<CodeKeyMap>) {\n      state.menu.codeKeyMap = action.payload;\n      SettingModel.setValue(state);\n    },\n\n    setTabSize(state, action: PayloadAction<TabSize>) {\n      state.menu.tabSize = action.payload;\n      SettingModel.setValue(state);\n    },\n  },\n});\n\nexport const { setCodeTheme, setCodeKeyMap, setTabSize } = settingSlice.actions;\nexport default settingSlice.reducer;\n","export default class BrowserStorage<T> {\n  key: string;\n\n  storage: Storage;\n\n  constructor(key: string) {\n    this.key = key;\n    this.storage = window.localStorage;\n  }\n\n  getValue(initial: T): T {\n    try {\n      return JSON.parse(this.storage[this.key]) as T;\n    } catch {\n      return initial;\n    }\n  }\n\n  setValue(value: T) {\n    this.storage[this.key] = JSON.stringify(value);\n  }\n}\n","import React from 'react';\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { CodeTheme, CodeKeyMap, TabSize, setCodeTheme, setCodeKeyMap, setTabSize } from 'features/settingSlices';\nimport { AppState } from 'app/rootReducer';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '400px',\n      minWidth: '320px',\n      borderRadius: '4px',\n    },\n    header: {\n      borderBottom: `1px solid ${theme.palette.text.disabled}`,\n    },\n    title: {\n      padding: '12px 16px',\n    },\n    list: {\n      padding: '12px 24px',\n      lineHeight: '19px',\n    },\n    item: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      fontSize: '15px',\n      marginTop: '12px',\n    },\n    itemTitle: {\n      whiteSpace: 'nowrap',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    itemInfo: {\n      minWidth: 140,\n      paddingLeft: '12px',\n      border: '1px solid #aaa',\n      borderRadius: '4px',\n      textAlign: 'left',\n    },\n  }),\n);\n\nconst Settings = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const menu = useSelector((state: AppState) => state.settingState.menu);\n\n  function handleChange<T>(action: ActionCreatorWithPayload<T>) {\n    return (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n      dispatch(action(event.target.value as T));\n    };\n  }\n\n  return (\n    <div className={classes.root}>\n      <Box>\n        <header className={classes.header}>\n          <Typography className={classes.title} variant=\"h6\">Settings</Typography>\n        </header>\n      </Box>\n      <div className={classes.list}>\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Theme</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.codeTheme} onChange={handleChange(setCodeTheme)} disableUnderline displayEmpty>\n              {Object.entries(CodeTheme).map(([display, theme]: [string, string]) => {\n                return (\n                  <MenuItem value={theme} key={theme}>\n                    {display}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Key binding</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.codeKeyMap} onChange={handleChange(setCodeKeyMap)} disableUnderline displayEmpty>\n              {Object.entries(CodeKeyMap).map(([display, codeKeyMap]: [string, string]) => {\n                return (\n                  <MenuItem value={codeKeyMap} key={codeKeyMap}>\n                    {display}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Tab Size</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.tabSize} onChange={handleChange(setTabSize)} disableUnderline displayEmpty>\n              {Object.entries(TabSize).map(([key, tabSize]: [string, string]) => {\n                return (\n                  <MenuItem value={tabSize} key={key}>\n                    {`${tabSize} spaces`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React, { useState, useEffect, useCallback, MouseEvent, ChangeEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Popover from 'components/Popover';\n\nimport { AppState } from 'app/rootReducer';\nimport { CodeMode, setCodeMode } from 'features/docSlices';\nimport Settings from './Settings';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '6px',\n      position: 'relative',\n    },\n    formControl: {\n      minWidth: 140,\n      border: `1px solid ${theme.palette.grey['800']}`,\n      borderRadius: '4px',\n    },\n    selectEmpty: {\n      paddingLeft: '12px',\n    },\n    settingsButton: {\n      float: 'right',\n      padding: '7px',\n    },\n  }),\n);\n\nexport default function Toolbar() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const doc = useSelector((state: AppState) => state.docState.doc);\n  const codeMode = useSelector((state: AppState) => state.docState.mode);\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | undefined>();\n\n  useEffect(() => {\n    if (!doc) {\n      return () => {};\n    }\n\n    const unsubscribe = doc.subscribe((event) => {\n      if (event.name === 'remote-change') {\n        dispatch(setCodeMode(doc.getRootObject().mode || CodeMode.PlainText));\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [doc]);\n\n  const handleCodeModeChange = useCallback(\n    (event: ChangeEvent<{ name?: string; value: unknown }>) => {\n      if (!doc) {\n        return;\n      }\n      const mode = event.target.value as CodeMode;\n      doc.update((root) => {\n        // eslint-disable-next-line no-param-reassign\n        root.mode = mode;\n      });\n\n      dispatch(setCodeMode(mode));\n    },\n    [doc, dispatch],\n  );\n\n  const handleSettingsClick = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  }, []);\n  const handleSettingsClose = useCallback(() => {\n    setAnchorEl(undefined);\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.formControl}>\n        <Tooltip title=\"Syntax\" arrow>\n          <Select\n            name=\"codeMode\"\n            value={codeMode}\n            onChange={handleCodeModeChange}\n            className={classes.selectEmpty}\n            disableUnderline\n            displayEmpty\n          >\n            {Object.entries(CodeMode).map(([display, mode]: [string, string]) => {\n              return (\n                <MenuItem value={mode} key={mode}>\n                  {display}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </Tooltip>\n      </FormControl>\n      <Tooltip title=\"Settings\" arrow>\n        <IconButton className={classes.settingsButton} aria-label=\"settings\" onClick={handleSettingsClick}>\n          <SettingsIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Popover anchorEl={anchorEl} onClose={handleSettingsClose}>\n        <Settings />\n      </Popover>\n    </div>\n  );\n}\n","import { ActorID } from 'yorkie-js-sdk';\nimport invert from 'invert-color';\nimport { Metadata } from 'features/peerSlices';\n\nenum CursorStatus {\n  Deactivated = 'deactivated',\n  Activated = 'activated',\n}\n\n// REF https://github.com/FujitsuLaboratories/cattaz/blob/master/src/AppEnabledWikiEditorCodeMirror.jsx#L24\nexport default class Cursor {\n  private id: ActorID;\n\n  private username: string;\n\n  private color: string;\n\n  private height: number;\n\n  private marker?: CodeMirror.TextMarker;\n\n  private lineMarker?: CodeMirror.TextMarker;\n\n  private status: CursorStatus;\n\n  private nameRemoveTimeMap: Map<ActorID, ReturnType<typeof setTimeout>>;\n\n  private nameAnimationDelay: number;\n\n  private nameAnimationDuration: number;\n\n  private nameRemoveTime: number;\n\n  constructor(id: ActorID, metadata: Metadata) {\n    this.id = id;\n    this.username = metadata.username;\n    this.color = metadata.color;\n    this.height = 0;\n    this.status = CursorStatus.Deactivated;\n\n    this.nameRemoveTimeMap = new Map();\n    this.nameAnimationDelay = 1;\n    this.nameAnimationDuration = 0.2;\n    this.nameRemoveTime = (this.nameAnimationDuration + this.nameAnimationDelay) * 1000;\n  }\n\n  updateCursor(cm: CodeMirror.Editor, cursorPos: CodeMirror.Position) {\n    this.removeCursor();\n    this.status = CursorStatus.Activated;\n    const cursorCoords = cm.cursorCoords(cursorPos);\n    const cursorHolder = document.createElement('span');\n    this.height = cursorCoords.bottom - cursorCoords.top;\n\n    cursorHolder.classList.add('codePair-cursor');\n    cursorHolder.style.borderLeftColor = this.color;\n    cursorHolder.style.height = `${this.height}px`;\n\n    this.marker = cm.setBookmark(cursorPos, {\n      widget: cursorHolder,\n      insertLeft: true,\n    });\n\n    this.showCursorNameReserve(cursorHolder);\n  }\n\n  updateLine(cm: CodeMirror.Editor, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) {\n    this.removeLine();\n    this.status = CursorStatus.Activated;\n\n    this.lineMarker = cm.getDoc().markText(fromPos, toPos, {\n      css: `background-color : ${this.color}; opacity:0.7`,\n    });\n  }\n\n  // when user's cursor hover, show name\n  private showCursorNameReserve(cursorHolder: Element) {\n    const nameHolder = document.createElement('span');\n    nameHolder.classList.add('codePair-name');\n\n    cursorHolder.addEventListener('mouseenter', () => {\n      if (this.nameRemoveTimeMap.has(this.id)) {\n        clearTimeout(this.nameRemoveTimeMap.get(this.id)!);\n      }\n\n      nameHolder.textContent = this.username;\n      nameHolder.style.top = `-${this.height}px`;\n      nameHolder.style.backgroundColor = this.color;\n      nameHolder.style.color = invert(this.color, true);\n\n      /**\n       * nameEl is being reused.\n       * In order to keep the name visible while the mouse is hovering,\n       * It need to delete the css class containing animation when it is mouseenter and add it when it is mouseleave.\n       */\n      nameHolder.classList.remove('text-remove');\n      cursorHolder.appendChild(nameHolder);\n    });\n\n    cursorHolder.addEventListener('mouseleave', () => {\n      nameHolder.classList.add('text-remove');\n      nameHolder.style.animationDuration = `${this.nameAnimationDuration}s`;\n      nameHolder.style.animationDelay = `${this.nameAnimationDelay}s`;\n\n      this.removeNameReserve(nameHolder);\n    });\n  }\n\n  // After animate, It should actually be deleted it.\n  private removeNameReserve(nameHolder: HTMLSpanElement) {\n    const timeoutId = setTimeout(() => {\n      nameHolder.parentNode!.removeChild(nameHolder);\n      this.nameRemoveTimeMap.delete(this.id);\n    }, this.nameRemoveTime);\n\n    this.nameRemoveTimeMap.set(this.id, timeoutId);\n  }\n\n  removeCursor() {\n    if (this.marker) {\n      this.marker.clear();\n      this.marker = undefined;\n    }\n  }\n\n  removeLine() {\n    if (this.lineMarker) {\n      this.lineMarker.clear();\n      this.lineMarker = undefined;\n    }\n  }\n\n  isActive() {\n    return this.status === CursorStatus.Activated;\n  }\n}\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ActorID } from 'yorkie-js-sdk';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\n\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { AppState } from 'app/rootReducer';\nimport {\n  attachDoc,\n  detachDoc,\n  createClient,\n  createDocument,\n  attachDocLoading,\n  CodeMode,\n  setCodeMode,\n} from 'features/docSlices';\nimport { Peer, Metadata, ConnectionStatus, connectPeer, disconnectPeer } from 'features/peerSlices';\n\nimport Cursor from './Cursor';\n\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/edit/closetag';\n\nimport 'codemirror/mode/go/go';\nimport 'codemirror/mode/dart/dart';\nimport 'codemirror/mode/ruby/ruby';\nimport 'codemirror/mode/rust/rust';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/clojure/clojure';\nimport 'codemirror/mode/javascript/javascript';\n\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/keymap/emacs';\nimport 'codemirror/keymap/vim';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/material.css';\nimport './editor.css';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    height: 'calc(100vh - 110px)',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nexport default function Editor(props: { docKey: string }) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const { docKey } = props;\n  const doc = useSelector((state: AppState) => state.docState.doc);\n  const codeMode = useSelector((state: AppState) => state.docState.mode);\n  const client = useSelector((state: AppState) => state.docState.client);\n  const loading = useSelector((state: AppState) => state.docState.loading);\n  const errorMessage = useSelector((state: AppState) => state.docState.errorMessage);\n  const peers = useSelector((state: AppState) => state.peerState.peers);\n  const menu = useSelector((state: AppState) => state.settingState.menu);\n  const cursorMapRef = useRef<Map<ActorID, Cursor>>(new Map());\n\n  const connectPeerWithCursor = useCallback(\n    (clientID: ActorID, metadata: Metadata) => {\n      cursorMapRef.current.set(clientID, new Cursor(clientID, metadata));\n\n      const peer: Peer = {\n        id: clientID,\n        status: ConnectionStatus.Connected,\n        metadata,\n      };\n      dispatch(connectPeer(peer));\n    },\n    [peers],\n  );\n\n  const disconnectPeerWithCursor = useCallback((clientID: ActorID) => {\n    if (cursorMapRef.current.has(clientID)) {\n      cursorMapRef.current.get(clientID)!.removeCursor();\n      cursorMapRef.current.delete(clientID);\n    }\n    dispatch(disconnectPeer(clientID));\n  }, []);\n\n  useEffect(() => {\n    dispatch(attachDocLoading(true));\n    dispatch(createClient());\n    dispatch(createDocument(docKey));\n\n    return () => {\n      dispatch(detachDoc());\n      dispatch(attachDocLoading(false));\n    };\n  }, [docKey]);\n\n  useEffect(() => {\n    if (!client || !doc) {\n      return () => {};\n    }\n\n    const unsubscribe = client.subscribe((event) => {\n      if (event.name === 'peers-changed') {\n        const changedPeers = event.value[doc.getKey().toIDString()];\n\n        for (const clientID of Object.keys(peers)) {\n          if (!changedPeers[clientID]) {\n            disconnectPeerWithCursor(clientID);\n          }\n        }\n\n        for (const [clientID, metadata] of Object.entries(changedPeers)) {\n          if (!peers[clientID] || peers[clientID].status === ConnectionStatus.Disconnected) {\n            connectPeerWithCursor(clientID, metadata as Metadata);\n          }\n        }\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [client, doc, peers]);\n\n  useEffect(() => {\n    if (!client || !doc) {\n      return;\n    }\n\n    const attachDocAsync = async () => {\n      await dispatch(attachDoc({ client, document: doc }));\n      dispatch(setCodeMode(doc.getRootObject().mode || CodeMode.PlainText));\n      dispatch(attachDocLoading(false));\n    };\n    attachDocAsync();\n  }, [client, doc]);\n\n  if (loading) {\n    return (\n      <Box className={classes.root}>\n        <CircularProgress color=\"inherit\" />\n      </Box>\n    );\n  }\n\n  if (errorMessage || !client || !doc) {\n    return (\n      <div className={classes.root}>\n        <Snackbar open anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n          <Alert severity=\"warning\">{errorMessage || 'fail to attach document'}</Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n\n  return (\n    <CodeMirror\n      options={{\n        mode: codeMode,\n        theme: menu.codeTheme,\n        keyMap: menu.codeKeyMap,\n        tabSize: Number(menu.tabSize),\n        lineNumbers: true,\n        lineWrapping: true,\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n      }}\n      editorDidMount={(editor: CodeMirror.Editor) => {\n        editor.focus();\n        const updateCursor = (clientID: ActorID, pos: CodeMirror.Position) => {\n          const cursor = cursorMapRef.current.get(clientID);\n          cursor?.updateCursor(editor, pos);\n        };\n\n        const updateLine = (clientID: ActorID, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) => {\n          const cursor = cursorMapRef.current.get(clientID);\n          cursor?.updateLine(editor, fromPos, toPos);\n        };\n\n        // TODO Load user's cursor position\n        doc.subscribe((event: any) => {\n          if (event.name === 'remote-change') {\n            event.value.forEach((change: any) => {\n              const { actor } = change.getID();\n              if (actor !== client.getID()) {\n                if (!cursorMapRef.current.has(actor)) {\n                  return;\n                }\n\n                const cursor = cursorMapRef.current.get(actor);\n                if (cursor!.isActive()) {\n                  return;\n                }\n\n                updateCursor(actor, editor.posFromIndex(0));\n              }\n            });\n          }\n        });\n\n        // When there is a document modification connected to the yorkie\n        const root = doc.getRootObject();\n        root.content.onChanges((changes: any) => {\n          changes.forEach((change: any) => {\n            const { actor, from, to } = change;\n            if (change.type === 'content') {\n              const content = change.content || '';\n\n              if (actor !== client.getID()) {\n                const fromPos = editor.posFromIndex(from);\n                const toPos = editor.posFromIndex(to);\n                editor.replaceRange(content, fromPos, toPos, 'yorkie');\n              }\n            } else if (change.type === 'selection') {\n              if (actor !== client.getID()) {\n                let fromPos = editor.posFromIndex(from);\n                let toPos = editor.posFromIndex(to);\n                updateCursor(actor, toPos);\n\n                if (from > to) {\n                  [toPos, fromPos] = [fromPos, toPos];\n                }\n                updateLine(actor, fromPos, toPos);\n              }\n            }\n          });\n        });\n\n        // We need to subtract the height of NavBar.\n        editor.setSize('auto', 'calc(100vh - 110px)');\n        editor.setValue(root.content.getValue());\n      }}\n      // Notifying other clients to move the cursor\n      onSelection={(editor: CodeMirror.Editor, data: CodeMirror.EditorSelectionChange) => {\n        if (data.origin === undefined) {\n          return;\n        }\n\n        const from = editor.indexFromPos(data.ranges[0].anchor);\n        const to = editor.indexFromPos(data.ranges[0].head);\n\n        doc.update((root) => {\n          root.content.updateSelection(from, to);\n        });\n      }}\n      // Edit the yorkie document\n      onBeforeChange={(editor: CodeMirror.Editor, change: CodeMirror.EditorChange) => {\n        if (change.origin === 'yorkie' || change.origin === 'setValue') {\n          return;\n        }\n\n        const from = editor.indexFromPos(change.from);\n        const to = editor.indexFromPos(change.to);\n        const content = change.text.join('\\n');\n\n        doc.update((root) => {\n          root.content.edit(from, to, content);\n        });\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport NavBar from 'components/NavBar';\nimport Toolbar from 'components/Toolbar';\nimport Editor from 'components/Editor';\n\ntype DocPageProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function DocPage(props: RouteComponentProps<DocPageProps>) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const { docKey } = params;\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <Toolbar />\n      <Editor docKey={docKey} />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\n\nimport docReducer from 'features/docSlices';\nimport peerReducer from 'features/peerSlices';\nimport settingReducer from 'features/settingSlices';\n\nconst rootReducer = combineReducers({\n  docState: docReducer,\n  peerState: peerReducer,\n  settingState: settingReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { AppState } from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['doc/attach/fulfilled'],\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n    immutableCheck: {\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n  }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, AppState, unknown, Action<string>>;\n\nexport default store;\n","import React, { useMemo, useCallback } from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport DocPage from 'pages/DocPage';\nimport store from './store';\n\nimport './App.css';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = useMemo(() => createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light',\n    },\n  }), [prefersDarkMode]);\n\n  const handleRender = useCallback(() => {\n    return <Redirect to={`/${Math.random().toString(36).substring(7)}`} />;\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Router>\n          <Route path=\"/\" exact render={handleRender} />\n          <Route path=\"/:docKey\" exact component={DocPage} />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'app/App';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}