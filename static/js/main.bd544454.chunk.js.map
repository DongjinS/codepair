{"version":3,"sources":["reducers/peerReducer.ts","reducers/docReducer.ts","reducers/rootReducer.ts","store/store.ts","components/NavBar.tsx","components/Editor/ClientCursor.ts","components/Editor/CodeEditor.tsx","pages/DocPage.tsx","theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ConnectionStatus","attachDoc","createAsyncThunk","docKey","thunkApi","a","client","yorkie","createClient","process","document","createDocument","activate","attach","update","root","content","createText","sync","rejectWithValue","docSlice","createSlice","name","initialState","doc","loading","errorMessage","reducers","attachDocLoading","state","action","payload","extraReducers","builder","addCase","fulfilled","rejected","actions","peerSlice","peers","connectPeer","id","color","status","disconnectPeer","Disconnected","rootReducer","combineReducers","docState","docReducer","peerState","peerReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","immutableCheck","useStyles","makeStyles","theme","createStyles","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","AppBar","position","Toolbar","Typography","variant","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","MenuItem","ClientCursor","height","marker","lineMarker","nameRemoveTimeMap","nameAnimationDelay","nameAnimationDuration","nameRemoveTime","this","Map","cm","cursorPos","removeCursor","cursorCoords","cursorHolder","createElement","bottom","top","classList","add","style","borderLeftColor","setBookmark","widget","insertLeft","showCursorNameReserve","fromPos","toPos","removeLine","getDoc","markText","css","nameHolder","addEventListener","has","clearTimeout","get","textContent","backgroundColor","invert","remove","appendChild","animationDuration","animationDelay","removeNameReserve","timeoutId","setTimeout","parentNode","removeChild","delete","set","clear","width","marginTop","CodeEditor","props","dispatch","useDispatch","useSelector","peerClients","otherClientsCursor","useRef","connectClient","clientId","existedClient","randomColor","newClientCursor","current","Connected","useEffect","attachDocAsync","disconnectClient","unsubscribe","subscribe","newPeerClients","value","getKey","toIDString","Object","keys","Box","CircularProgress","Alert","severity","options","mode","lineNumbers","editorDidMount","editor","focus","updateCursor","pos","forEach","change","actor","getID","posFromIndex","getRootObject","onChanges","changes","from","to","type","replaceRange","updateLine","setSize","setValue","getValue","onSelection","data","undefined","origin","indexFromPos","ranges","anchor","head","updateSelection","onBeforeChange","text","join","edit","DocPage","match","params","createMuiTheme","palette","App","ThemeProvider","CssBaseline","path","exact","render","Math","random","toString","substring","component","window","location","hostname","ReactDOM","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iLAEYA,E,mICeCC,EAAYC,YACvB,cADuC,uCAEvC,WAAOC,EAAgBC,GAAvB,iBAAAC,EAAA,sEAEUC,EAASC,IAAOC,aAAP,UAAuBC,SAChCC,EAAWH,IAAOI,eAAe,YAAaR,GAHxD,SAKUG,EAAOM,WALjB,uBAMUN,EAAOO,OAAOH,GANxB,cAQIA,EAASI,QAAO,SAACC,GACVA,EAAKC,SACRD,EAAKE,WAAW,cAVxB,UAaUX,EAAOY,OAbjB,iCAcW,CAAER,WAAUJ,WAdvB,2DAgBWF,EAASe,gBAAT,OAhBX,0DAFuC,yDAuBnCC,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aAhC6B,CAC7BjB,OAAQ,KACRkB,IAAK,KACLC,SAAS,EACTC,aAAc,IA6BdC,SAAU,CACRC,iBADQ,SACSC,EAAOC,GACtBD,EAAMJ,QAAUK,EAAOC,UAG3BC,cAAe,SAACC,GACdA,EAAQC,QAAQjC,EAAUkC,WAAW,SAACN,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC7CF,EAAML,IAAMO,EAAQrB,SACpBmB,EAAMvB,OAASyB,EAAQzB,UAEzB2B,EAAQC,QAAQjC,EAAUmC,UAAU,SAACP,EAAD,GAAyB,IAAfE,EAAc,EAAdA,QAC5CF,EAAMH,aAAeK,QAKZH,EAAqBR,EAASiB,QAA9BT,iBACAR,IAAf,S,SD1DYpB,K,sBAAAA,E,6BAAAA,M,KAiBZ,IAIMsC,EAAYjB,YAAY,CAC5BC,KAAM,OACNC,aANkC,CAClCgB,MAAO,IAMPZ,SAAU,CACRa,YADQ,SACIX,EAAOC,GAAiF,IAAD,EACnEA,EAAOC,QAA7BU,EADyF,EACzFA,GAAIC,EADqF,EACrFA,MAAOC,EAD8E,EAC9EA,OACnBd,EAAMU,MAAME,GAAM,CAChBA,KACAC,QACAC,WAGJC,eATQ,SASOf,EAAOC,GACpBD,EAAMU,MAAMT,EAAOC,SAASY,OAAS3C,EAAiB6C,iB,EAKbP,EAAUD,QAA1CG,E,EAAAA,YAAaI,E,EAAAA,eACbN,IAAf,QE9BeQ,EAPKC,YAAgB,CAClCC,SAAUC,EACVC,UAAWC,ICeEC,EAjBDC,YAAe,CAC3BC,QAASR,EACTS,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAAC,yBACjBC,aAAc,CAAC,kBAAmB,iBAEpCC,eAAgB,CACdD,aAAc,CAAC,kBAAmB,qB,iGCHlCE,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXjD,KAAM,CACJkD,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,QAKD,SAASK,IACtB,IAAMC,EAAUV,IADmB,EAEHW,IAAMC,SAA6B,MAFhC,mBAE5BC,EAF4B,KAElBC,EAFkB,KAG7BC,EAAOC,QAAQH,GAMfI,EAAc,WAClBH,EAAY,OAGd,OACE,yBAAKI,UAAWR,EAAQxD,MACtB,kBAACiE,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWR,EAAQF,OAA5C,mBAGA,6BACE,kBAACgB,EAAA,EAAD,CACEC,aAAW,WACXC,gBAAc,cACdC,gBAAc,OACdC,QApBO,SAACC,GAClBf,EAAYe,EAAMC,gBAoBRjD,MAAM,WAEN,kBAAC,IAAD,OAEF,kBAACkD,EAAA,EAAD,CAAMnD,GAAG,cAAciC,SAAUA,EAAUmB,aAAW,EAACjB,KAAMA,EAAMkB,QAAShB,GAC1E,kBAACiB,EAAA,EAAD,CAAUN,QAASX,GAAnB,SACA,kBAACiB,EAAA,EAAD,CAAUN,QAASX,GAAnB,eACA,kBAACiB,EAAA,EAAD,CAAUN,QAASX,GAAnB,YACA,kBAACiB,EAAA,EAAD,CAAUN,QAASX,GAAnB,kB,yFCgECkB,G,WAjGb,WAAYvD,EAAaC,GAAgB,yBAlBjCD,QAkBgC,OAhBhCC,WAgBgC,OAdhCuD,YAcgC,OAZhCC,YAYgC,OAVhCC,gBAUgC,OARhCC,uBAQgC,OANhCC,wBAMgC,OAJhCC,2BAIgC,OAFhCC,oBAEgC,EACtCC,KAAK/D,GAAKA,EACV+D,KAAK9D,MAAQA,EACb8D,KAAKP,OAAS,EACdO,KAAKN,OAAS,KACdM,KAAKL,WAAa,KAElBK,KAAKJ,kBAAoB,IAAIK,IAC7BD,KAAKH,mBAAqB,EAC1BG,KAAKF,sBAAwB,GAC7BE,KAAKD,eAA0E,KAAxDC,KAAKF,sBAAwBE,KAAKH,oB,yDAG9CK,EAAuBC,GAClCH,KAAKI,eACL,IAAMC,EAAeH,EAAGG,aAAaF,GAC/BG,EAAepG,SAASqG,cAAc,QAC5CP,KAAKP,OAASY,EAAaG,OAASH,EAAaI,IAEjDH,EAAaI,UAAUC,IAAI,mBAC3BL,EAAaM,MAAMC,gBAAkBb,KAAK9D,MAC1CoE,EAAaM,MAAMnB,OAAnB,UAA+BO,KAAKP,OAApC,MAEAO,KAAKN,OAASQ,EAAGY,YAAYX,EAAW,CACtCY,OAAQT,EACRU,YAAY,IAGdhB,KAAKiB,sBAAsBX,K,iCAGlBJ,EAAuBgB,EAA8BC,GAC9DnB,KAAKoB,aAELpB,KAAKL,WAAaO,EAAGmB,SAASC,SAASJ,EAASC,EAAO,CACrDI,IAAI,sBAAD,OAAwBvB,KAAK9D,MAA7B,qB,4CAKuBoE,GAAwB,IAAD,OAC7CkB,EAAatH,SAASqG,cAAc,QAC1CiB,EAAWd,UAAUC,IAAI,iBAEzBL,EAAamB,iBAAiB,cAAc,WACtC,EAAK7B,kBAAkB8B,IAAI,EAAKzF,KAClC0F,aAAa,EAAK/B,kBAAkBgC,IAAI,EAAK3F,KAG/CuF,EAAWK,YAAc,EAAK5F,GAC9BuF,EAAWZ,MAAMH,IAAjB,WAA2B,EAAKhB,OAAhC,MACA+B,EAAWZ,MAAMkB,gBAAkB,EAAK5F,MACxCsF,EAAWZ,MAAM1E,MAAQ6F,IAAO,EAAK7F,OAAO,GAO5CsF,EAAWd,UAAUsB,OAAO,eAC5B1B,EAAa2B,YAAYT,MAG3BlB,EAAamB,iBAAiB,cAAc,WAC1CD,EAAWd,UAAUC,IAAI,eACzBa,EAAWZ,MAAMsB,kBAAjB,UAAwC,EAAKpC,sBAA7C,KACA0B,EAAWZ,MAAMuB,eAAjB,UAAqC,EAAKtC,mBAA1C,KAEA,EAAKuC,kBAAkBZ,Q,wCAKDA,GAA8B,IAAD,OAC/Ca,EAAYC,YAAW,WAC3Bd,EAAWe,WAAYC,YAAYhB,GACnC,EAAK5B,kBAAkB6C,OAAO,EAAKxG,MAClC+D,KAAKD,gBAERC,KAAKJ,kBAAkB8C,IAAI1C,KAAK/D,GAAIoG,K,qCAIhCrC,KAAKN,SACPM,KAAKN,OAAOiD,QACZ3C,KAAKN,OAAS,Q,mCAKZM,KAAKL,aACPK,KAAKL,WAAWgD,QAChB3C,KAAKL,WAAa,U,KC9FlBtC,I,qBAAYC,aAAW,SAACC,GAAD,MAAY,CACvChD,KAAM,CACJqI,MAAO,OACP,YAAa,CACXC,UAAWtF,EAAMK,QAAQ,UAKhB,SAASkF,GAAWC,GACjC,IAAMC,EAAWC,cACXlF,EAAUV,KAER1D,EAAWoJ,EAAXpJ,OACFqB,EAAMkI,aAAY,SAAC7H,GAAD,OAAqBA,EAAMmB,SAASxB,OACtDlB,EAASoJ,aAAY,SAAC7H,GAAD,OAAqBA,EAAMmB,SAAS1C,UACzDmB,EAAUiI,aAAY,SAAC7H,GAAD,OAAqBA,EAAMmB,SAASvB,WAC1DC,EAAegI,aAAY,SAAC7H,GAAD,OAAqBA,EAAMmB,SAAStB,gBAC/DiI,EAAcD,aAAY,SAAC7H,GAAD,OAAqBA,EAAMqB,UAAUX,SAC/DqH,EAAqBC,iBAAkC,IAAIpD,KAE3DqD,EAAgB,SAACC,GACrB,IAEIrH,EAFEsH,EAAgBL,EAAYI,GAIhCrH,EADEsH,GAAiBA,EAAcrH,SAAW3C,EAAiB6C,aACrDmH,EAActH,MAEduH,MAGV,IAAMC,EAAkB,IAAIlE,GAAa+D,EAAUrH,GACnDkH,EAAmBO,QAAQjB,IAAIa,EAAUG,GACzCV,EAAShH,EAAY,CAAEC,GAAIsH,EAAUrH,QAAOC,OAAQ3C,EAAiBoK,cA6CvE,OAzCAC,qBAAU,WAAM,4CACd,sBAAAhK,EAAA,6DACEmJ,EAAS5H,GAAiB,IAD5B,SAEQ4H,EAASvJ,EAAUE,IAF3B,OAGEqJ,EAAS5H,GAAiB,IAH5B,4CADc,uBAAC,WAAD,wBAMd0I,KACC,CAACnK,EAAQqJ,IAGZa,qBAAU,WACR,IAAK/J,IAAWkB,EACd,OAAO,aAGT,IAAM+I,EAAmB,SAACR,GACpBH,EAAmBO,QAAQjC,IAAI6B,KACjCH,EAAmBO,QAAQ/B,IAAI2B,GAAWnD,eAC1CgD,EAAmBO,QAAQlB,OAAOc,IAEpCP,EAAS5G,EAAemH,KAGpBS,EAAclK,EAAOmK,WAAU,SAAC/E,GACpC,GAAmB,kBAAfA,EAAMpE,KAGR,IAFA,IAAMoJ,EAAiBhF,EAAMiF,MAAMnJ,EAAIoJ,SAASC,cAEhD,MAAuBC,OAAOC,KAAKpB,GAAnC,eAAiD,CAA5C,IAAMI,EAAQ,KACbW,EAAeX,IAAaJ,EAAYI,GAAUpH,SAAW3C,EAAiBoK,WAGlFG,EAAiBR,OAKvB,OAAO,WACLS,OAED,CAAClK,EAAQkB,EAAKmI,EAAaH,IAE1B/H,EAEA,kBAACuJ,EAAA,EAAD,CAAK/E,OAAO,QACV,kBAACgF,EAAA,EAAD,CAAkBvI,MAAM,eAK1BhB,GAA2B,OAAXpB,GAA2B,OAARkB,EAEnC,yBAAKuD,UAAWR,EAAQxD,MACtB,kBAACmK,EAAA,EAAD,CAAOC,SAAS,SAASzJ,GAAgB,4BAM7C,kBAAC,eAAD,CACE0J,QAAS,CAAEC,KAAM,MAAOtH,MAAO,UAAWuH,aAAa,GACvDC,eAAgB,SAACC,GACfA,EAAOC,QACP,IAAMC,EAAe,SAAC3B,EAAkB4B,GACjB/B,EAAmBO,QAAQ/B,IAAI2B,GACtC2B,aAAaF,EAAQG,IAQrCnK,EAAIiJ,WAAU,SAAC/E,GACM,kBAAfA,EAAMpE,MACRoE,EAAMiF,MAAMiB,SAAQ,SAACC,GAAiB,IAC5BC,EAAUD,EAAOE,QAAjBD,MACJA,IAAUxL,EAAOyL,UACdnC,EAAmBO,QAAQjC,IAAI4D,KAClChC,EAAcgC,GACdJ,EAAaI,EAAON,EAAOQ,aAAa,YASlD,IAAMjL,EAAOS,EAAIyK,gBACjBlL,EAAKC,QAAQkL,WAAU,SAACC,GACtBA,EAAQP,SAAQ,SAACC,GAAiB,IACxBC,EAAoBD,EAApBC,MAAOM,EAAaP,EAAbO,KAAMC,EAAOR,EAAPQ,GACrB,GAAoB,YAAhBR,EAAOS,KAAoB,CAC7B,IAAMtL,EAAU6K,EAAO7K,SAAW,GAElC,GAAI8K,IAAUxL,EAAOyL,QAAS,CAC5B,IAAMrE,EAAU8D,EAAOQ,aAAaI,GAC9BzE,EAAQ6D,EAAOQ,aAAaK,GAClCb,EAAOe,aAAavL,EAAS0G,EAASC,EAAO,gBAE1C,GAAoB,cAAhBkE,EAAOS,MACZR,IAAUxL,EAAOyL,QAAS,CACvBnC,EAAmBO,QAAQjC,IAAI4D,IAClChC,EAAcgC,GAGhB,IAAIpE,EAAU8D,EAAOQ,aAAaI,GAC9BzE,EAAQ6D,EAAOQ,aAAaK,GAGhC,GAFAX,EAAaI,EAAOnE,GAEhByE,EAAOC,EAAI,CAAC,IAAD,EACM,CAAC3E,EAASC,GAA5BA,EADY,KACLD,EADK,MA3CJ,SAACqC,EAAkBrC,EAA8BC,GAC7CiC,EAAmBO,QAAQ/B,IAAI2B,GACtCyC,WAAWhB,EAAQ9D,EAASC,GA4CpC6E,CAAWV,EAAOpE,EAASC,UAOnC6D,EAAOiB,QAAQ,OAAQ,sBACvBjB,EAAOkB,SAAS3L,EAAKC,QAAQ2L,aAG/BC,YAAa,SAACpB,EAA2BqB,GACvC,QAAoBC,IAAhBD,EAAKE,OAAT,CAIA,IAAMX,EAAOZ,EAAOwB,aAAaH,EAAKI,OAAO,GAAGC,QAC1Cb,EAAKb,EAAOwB,aAAaH,EAAKI,OAAO,GAAGE,MAE9C3L,EAAIV,QAAO,SAACC,GACVA,EAAKC,QAAQoM,gBAAgBhB,EAAMC,QAIvCgB,eAAgB,SAAC7B,EAA2BK,GAC1C,GAAsB,WAAlBA,EAAOkB,QAAyC,aAAlBlB,EAAOkB,OAAzC,CAIA,IAAMX,EAAOZ,EAAOwB,aAAanB,EAAOO,MAClCC,EAAKb,EAAOwB,aAAanB,EAAOQ,IAChCrL,EAAU6K,EAAOyB,KAAKC,KAAK,MAEjC/L,EAAIV,QAAO,SAACC,GACVA,EAAKC,QAAQwM,KAAKpB,EAAMC,EAAIrL,UCpMtC,IAAM6C,GAAYC,aAAW,kBAC3BE,YAAa,CACXjD,KAAM,CACJkD,SAAU,QAKD,SAASwJ,GAAQlE,GAC9B,IAAMhF,EAAUV,KAIR1D,EADJoJ,EADFmE,MAASC,OAEHxN,OAER,OACE,yBAAK4E,UAAWR,EAAQxD,MACtB,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAYZ,OAAQA,K,aCpBX4D,GAND6J,aAAe,CAC3BC,QAAS,CACPvB,KAAM,U,OC4BKwB,OArBf,WACE,OACE,kBAAC,IAAD,CAAU1K,MAAOA,GACf,kBAAC2K,EAAA,EAAD,CAAehK,MAAOA,IAEpB,kBAACiK,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,IACLC,OAAK,EACLC,OAAQ,WACN,OAAO,kBAAC,IAAD,CAAU9B,GAAE,WAAM+B,KAAKC,SAASC,SAAS,IAAIC,UAAU,SAGlE,kBAAC,IAAD,CAAON,KAAK,WAAWC,OAAK,EAACM,UAAWf,SCd9B5I,QACW,cAA7B4J,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCbNkB,IAAST,OAAO,kBAAC,GAAD,MAASzN,SAASmO,cAAc,UDmI1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bd544454.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum ConnectionStatus {\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface Peer {\n  id: string;\n  color: string;\n  status: ConnectionStatus;\n}\n\nexport interface PeerState {\n  peers: {\n    [id: string]: Peer;\n  };\n}\n\nconst initialPeerState: PeerState = {\n  peers: {},\n};\n\nconst peerSlice = createSlice({\n  name: 'peer',\n  initialState: initialPeerState,\n  reducers: {\n    connectPeer(state, action: PayloadAction<{ id: string; color: string; status: ConnectionStatus }>) {\n      const { id, color, status } = action.payload;\n      state.peers[id] = {\n        id,\n        color,\n        status,\n      };\n    },\n    disconnectPeer(state, action: PayloadAction<string>) {\n      state.peers[action.payload].status = ConnectionStatus.Disconnected;\n    },\n  },\n});\n\nexport const { connectPeer, disconnectPeer } = peerSlice.actions;\nexport default peerSlice.reducer;\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport yorkie, { Client, Document } from 'yorkie-js-sdk';\n\nexport interface DocState {\n  client: Client | null;\n  doc: Document | null;\n  loading: boolean;\n  errorMessage: string;\n}\n\nconst initialState: DocState = {\n  client: null,\n  doc: null,\n  loading: false,\n  errorMessage: '',\n};\n\nexport const attachDoc = createAsyncThunk<AttachDocResult, string, { rejectValue: string }>(\n  'docs/attach',\n  async (docKey: string, thunkApi) => {\n    try {\n      const client = yorkie.createClient(`${process.env.REACT_APP_YORKIE_RPC_ADDR}`);\n      const document = yorkie.createDocument('codepairs', docKey);\n\n      await client.activate();\n      await client.attach(document);\n\n      document.update((root: any) => {\n        if (!root.content) {\n          root.createText('content');\n        }\n      });\n      await client.sync();\n      return { document, client };\n    } catch (err) {\n      return thunkApi.rejectWithValue(err);\n    }\n  },\n);\n\nconst docSlice = createSlice({\n  name: 'doc',\n  initialState,\n  reducers: {\n    attachDocLoading(state, action: PayloadAction<boolean>) {\n      state.loading = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(attachDoc.fulfilled, (state, { payload }) => {\n      state.doc = payload.document;\n      state.client = payload.client;\n    });\n    builder.addCase(attachDoc.rejected, (state, { payload }) => {\n      state.errorMessage = payload!;\n    });\n  },\n});\n\nexport const { attachDocLoading } = docSlice.actions;\nexport default docSlice.reducer;\n\ntype AttachDocResult = { document: Document; client: Client };\n","import { combineReducers } from 'redux';\n\nimport docReducer from './docReducer';\nimport peerReducer from './peerReducer';\n\nconst rootReducer = combineReducers({\n  docState: docReducer,\n  peerState: peerReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { AppState } from 'reducers/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['docs/attach/fulfilled'],\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n    immutableCheck: {\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n  }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, AppState, unknown, Action<string>>;\n\nexport default store;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Yorkie CodePair\n          </Typography>\n          <div>\n            <IconButton\n              aria-label=\"settings\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <SettingsIcon />\n            </IconButton>\n            <Menu id=\"menu-appbar\" anchorEl={anchorEl} keepMounted open={open} onClose={handleClose}>\n              <MenuItem onClick={handleClose}>Theme</MenuItem>\n              <MenuItem onClick={handleClose}>Editor Mode</MenuItem>\n              <MenuItem onClick={handleClose}>Tab Size</MenuItem>\n              <MenuItem onClick={handleClose}>Font Size</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import invert from 'invert-color';\n\n// TODO(hackerwins): Replace with ActorID from yorkie-js-sdk\ntype ActorID = string;\n\n// REF https://github.com/FujitsuLaboratories/cattaz/blob/master/src/AppEnabledWikiEditorCodeMirror.jsx#L24\nclass ClientCursor {\n  private id: ActorID;\n\n  private color: string;\n\n  private height: number;\n\n  private marker: CodeMirror.TextMarker | null;\n\n  private lineMarker: CodeMirror.TextMarker | null;\n\n  private nameRemoveTimeMap: Map<ActorID, ReturnType<typeof setTimeout>>;\n\n  private nameAnimationDelay: number;\n\n  private nameAnimationDuration: number;\n\n  private nameRemoveTime: number;\n\n  constructor(id: ActorID, color: string) {\n    this.id = id;\n    this.color = color;\n    this.height = 0;\n    this.marker = null;\n    this.lineMarker = null;\n\n    this.nameRemoveTimeMap = new Map();\n    this.nameAnimationDelay = 1;\n    this.nameAnimationDuration = 0.2;\n    this.nameRemoveTime = (this.nameAnimationDuration + this.nameAnimationDelay) * 1000;\n  }\n\n  updateCursor(cm: CodeMirror.Editor, cursorPos: CodeMirror.Position) {\n    this.removeCursor();\n    const cursorCoords = cm.cursorCoords(cursorPos);\n    const cursorHolder = document.createElement('span');\n    this.height = cursorCoords.bottom - cursorCoords.top;\n\n    cursorHolder.classList.add('codePair-cursor');\n    cursorHolder.style.borderLeftColor = this.color;\n    cursorHolder.style.height = `${this.height}px`;\n\n    this.marker = cm.setBookmark(cursorPos, {\n      widget: cursorHolder,\n      insertLeft: true,\n    });\n\n    this.showCursorNameReserve(cursorHolder);\n  }\n\n  updateLine(cm: CodeMirror.Editor, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) {\n    this.removeLine();\n\n    this.lineMarker = cm.getDoc().markText(fromPos, toPos, {\n      css: `background-color : ${this.color}; opacity:0.7`,\n    });\n  }\n\n  // when user's cursor hover, show name\n  private showCursorNameReserve(cursorHolder: Element) {\n    const nameHolder = document.createElement('span');\n    nameHolder.classList.add('codePair-name');\n\n    cursorHolder.addEventListener('mouseenter', () => {\n      if (this.nameRemoveTimeMap.has(this.id)) {\n        clearTimeout(this.nameRemoveTimeMap.get(this.id)!);\n      }\n\n      nameHolder.textContent = this.id;\n      nameHolder.style.top = `-${this.height}px`;\n      nameHolder.style.backgroundColor = this.color;\n      nameHolder.style.color = invert(this.color, true);\n\n      /**\n       * nameEl is being reused.\n       * In order to keep the name visible while the mouse is hovering,\n       * It need to delete the css class containing animation when it is mouseenter and add it when it is mouseleave.\n       */\n      nameHolder.classList.remove('text-remove');\n      cursorHolder.appendChild(nameHolder);\n    });\n\n    cursorHolder.addEventListener('mouseleave', () => {\n      nameHolder.classList.add('text-remove');\n      nameHolder.style.animationDuration = `${this.nameAnimationDuration}s`;\n      nameHolder.style.animationDelay = `${this.nameAnimationDelay}s`;\n\n      this.removeNameReserve(nameHolder);\n    });\n  }\n\n  // After animate, It should actually be deleted it.\n  private removeNameReserve(nameHolder: HTMLSpanElement) {\n    const timeoutId = setTimeout(() => {\n      nameHolder.parentNode!.removeChild(nameHolder);\n      this.nameRemoveTimeMap.delete(this.id);\n    }, this.nameRemoveTime);\n\n    this.nameRemoveTimeMap.set(this.id, timeoutId);\n  }\n\n  removeCursor() {\n    if (this.marker) {\n      this.marker.clear();\n      this.marker = null;\n    }\n  }\n\n  removeLine() {\n    if (this.lineMarker) {\n      this.lineMarker.clear();\n      this.lineMarker = null;\n    }\n  }\n}\n\nexport default ClientCursor;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport randomColor from 'randomcolor';\n\nimport { AppState } from 'reducers/rootReducer';\nimport { attachDoc, attachDocLoading } from 'reducers/docReducer';\nimport { ConnectionStatus, connectPeer, disconnectPeer } from 'reducers/peerReducer';\n\nimport ClientCursor from './ClientCursor';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport './CodeEditor.css';\n\ntype CodeEditorProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CodeEditor(props: CodeEditorProps) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const { docKey } = props;\n  const doc = useSelector((state: AppState) => state.docState.doc);\n  const client = useSelector((state: AppState) => state.docState.client);\n  const loading = useSelector((state: AppState) => state.docState.loading);\n  const errorMessage = useSelector((state: AppState) => state.docState.errorMessage);\n  const peerClients = useSelector((state: AppState) => state.peerState.peers);\n  const otherClientsCursor = useRef<Map<string, ClientCursor>>(new Map());\n\n  const connectClient = (clientId: string) => {\n    const existedClient = peerClients[clientId];\n\n    let color: string;\n    if (existedClient && existedClient.status === ConnectionStatus.Disconnected) {\n      color = existedClient.color;\n    } else {\n      color = randomColor();\n    }\n\n    const newClientCursor = new ClientCursor(clientId, color);\n    otherClientsCursor.current.set(clientId, newClientCursor);\n    dispatch(connectPeer({ id: clientId, color, status: ConnectionStatus.Connected }));\n  };\n\n  // Attach document\n  useEffect(() => {\n    async function attachDocAsync() {\n      dispatch(attachDocLoading(true));\n      await dispatch(attachDoc(docKey));\n      dispatch(attachDocLoading(false));\n    }\n    attachDocAsync();\n  }, [docKey, dispatch]);\n\n  // Subscribe other client\n  useEffect(() => {\n    if (!client || !doc) {\n      return () => {};\n    }\n\n    const disconnectClient = (clientId: string) => {\n      if (otherClientsCursor.current.has(clientId)) {\n        otherClientsCursor.current.get(clientId)!.removeCursor();\n        otherClientsCursor.current.delete(clientId);\n      }\n      dispatch(disconnectPeer(clientId));\n    };\n\n    const unsubscribe = client.subscribe((event: any) => {\n      if (event.name === 'peers-changed') {\n        const newPeerClients = event.value[doc.getKey().toIDString()];\n\n        for (const clientId of Object.keys(peerClients)) {\n          if (newPeerClients[clientId] && peerClients[clientId].status === ConnectionStatus.Connected) {\n            continue;\n          }\n          disconnectClient(clientId);\n        }\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [client, doc, peerClients, dispatch]);\n\n  if (loading) {\n    return (\n      <Box height=\"100%\">\n        <CircularProgress color=\"secondary\" />\n      </Box>\n    );\n  }\n\n  if (errorMessage || client === null || doc === null) {\n    return (\n      <div className={classes.root}>\n        <Alert severity=\"error\">{errorMessage || 'fail to attach document'}</Alert>\n      </div>\n    );\n  }\n\n  return (\n    <CodeMirror\n      options={{ mode: 'xml', theme: 'monokai', lineNumbers: true }}\n      editorDidMount={(editor: CodeMirror.Editor) => {\n        editor.focus();\n        const updateCursor = (clientId: string, pos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateCursor(editor, pos);\n        };\n\n        const updateLine = (clientId: string, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateLine(editor, fromPos, toPos);\n        };\n\n        doc.subscribe((event: any) => {\n          if (event.name === 'remote-change') {\n            event.value.forEach((change: any) => {\n              const { actor } = change.getID();\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                  updateCursor(actor, editor.posFromIndex(0));\n                  // TODO Load user's cursor position\n                }\n              }\n            });\n          }\n        });\n\n        // When there is a document modification connected to the yorkie\n        const root = doc.getRootObject() as any;\n        root.content.onChanges((changes: any) => {\n          changes.forEach((change: any) => {\n            const { actor, from, to } = change;\n            if (change.type === 'content') {\n              const content = change.content || '';\n\n              if (actor !== client.getID()) {\n                const fromPos = editor.posFromIndex(from);\n                const toPos = editor.posFromIndex(to);\n                editor.replaceRange(content, fromPos, toPos, 'yorkie');\n              }\n            } else if (change.type === 'selection') {\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                }\n\n                let fromPos = editor.posFromIndex(from);\n                let toPos = editor.posFromIndex(to);\n                updateCursor(actor, toPos);\n\n                if (from > to) {\n                  [toPos, fromPos] = [fromPos, toPos];\n                }\n                updateLine(actor, fromPos, toPos);\n              }\n            }\n          });\n        });\n\n        // We need to subtract the height of NavBar.\n        editor.setSize('auto', 'calc(100vh - 64px)');\n        editor.setValue(root.content.getValue());\n      }}\n      // Notifying other clients to move the cursor\n      onSelection={(editor: CodeMirror.Editor, data: CodeMirror.EditorSelectionChange) => {\n        if (data.origin === undefined) {\n          return;\n        }\n\n        const from = editor.indexFromPos(data.ranges[0].anchor);\n        const to = editor.indexFromPos(data.ranges[0].head);\n\n        doc.update((root: any) => {\n          root.content.updateSelection(from, to);\n        });\n      }}\n      // Edit the yorkie document\n      onBeforeChange={(editor: CodeMirror.Editor, change: CodeMirror.EditorChange) => {\n        if (change.origin === 'yorkie' || change.origin === 'setValue') {\n          return;\n        }\n\n        const from = editor.indexFromPos(change.from);\n        const to = editor.indexFromPos(change.to);\n        const content = change.text.join('\\n');\n\n        doc.update((root: any) => {\n          root.content.edit(from, to, content);\n        });\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport NavBar from 'components/NavBar';\nimport CodeEditor from 'components/Editor/CodeEditor';\n\ntype DocPageProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function DocPage(props: RouteComponentProps<DocPageProps>) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const { docKey } = params;\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <CodeEditor docKey={docKey} />\n    </div>\n  );\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport store from 'store/store';\nimport DocPage from 'pages/DocPage';\nimport theme from 'theme';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Router>\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return <Redirect to={`/${Math.random().toString(36).substring(7)}`} />;\n            }}\n          />\n          <Route path=\"/:docKey\" exact component={DocPage} />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}