{"version":3,"sources":["reducers/peerReducer.ts","reducers/docReducer.ts","reducers/settingReducer.ts","reducers/rootReducer.ts","store/store.ts","components/NavBar.tsx","components/Modal/index.tsx","components/Editor/CodeSetting.tsx","components/Editor/CodeNavBar.tsx","components/Editor/ClientCursor.ts","components/Editor/CodeEditor.tsx","pages/DocPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ConnectionStatus","attachDoc","createAsyncThunk","docKey","thunkApi","a","client","yorkie","createClient","process","document","createDocument","activate","attach","update","root","content","createText","sync","rejectWithValue","docSlice","createSlice","name","initialState","doc","loading","errorMessage","reducers","attachDocLoading","state","action","payload","extraReducers","builder","addCase","fulfilled","rejected","actions","CodeMode","CodeTheme","CodeKeyMap","TabSize","peerSlice","peers","connectPeer","id","color","status","disconnectPeer","Disconnected","menu","codeMode","Go","codeTheme","Monokai","codeKeyMap","Sublime","tabSize","Two","settingSlice","setCodeMode","setCodeTheme","setCodeKeyMap","setTabSize","rootReducer","combineReducers","docState","docReducer","peerState","peerReducer","settingState","settingReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","ignoredPaths","immutableCheck","useStyles","makeStyles","theme","createStyles","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","modal","top","left","transform","Modal","props","open","onClose","children","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","palette","text","primary","backgroundColor","light","width","minWidth","borderRadius","header","main","borderBottom","disabled","padding","list","lineHeight","item","display","justifyContent","fontSize","marginTop","itemTitle","whiteSpace","alignItems","itemInfo","paddingLeft","border","textAlign","CodeSetting","dispatch","useDispatch","useSelector","handleChange","event","target","value","Box","FormControl","Select","onChange","disableUnderline","displayEmpty","Object","entries","map","MenuItem","key","formControl","grey","selectEmpty","box","CodeNavBar","useState","isModalOpen","setIsModalOpen","Grid","container","direction","justify","mode","onClick","ClientCursor","height","marker","lineMarker","nameRemoveTimeMap","nameAnimationDelay","nameAnimationDuration","nameRemoveTime","this","Map","cm","cursorPos","removeCursor","cursorCoords","cursorHolder","createElement","bottom","classList","add","style","borderLeftColor","setBookmark","widget","insertLeft","showCursorNameReserve","fromPos","toPos","removeLine","getDoc","markText","css","nameHolder","addEventListener","has","clearTimeout","get","textContent","invert","remove","appendChild","animationDuration","animationDelay","removeNameReserve","timeoutId","setTimeout","parentNode","removeChild","delete","set","clear","CodeEditor","peerClients","otherClientsCursor","useRef","connectClient","clientId","existedClient","randomColor","newClientCursor","current","Connected","useEffect","attachDocAsync","disconnectClient","unsubscribe","subscribe","newPeerClients","getKey","toIDString","keys","CircularProgress","Snackbar","anchorOrigin","vertical","horizontal","Alert","severity","options","keyMap","Number","lineNumbers","lineWrapping","autoCloseTags","autoCloseBrackets","editorDidMount","editor","focus","updateCursor","pos","forEach","change","actor","getID","posFromIndex","getRootObject","onChanges","changes","from","to","type","replaceRange","updateLine","setSize","setValue","getValue","onSelection","data","undefined","origin","indexFromPos","ranges","anchor","head","updateSelection","onBeforeChange","join","edit","DocPage","match","params","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","CssBaseline","path","exact","render","Math","random","toString","substring","component","Boolean","window","location","hostname","ReactDOM","querySelector","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db47b4d7.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum ConnectionStatus {\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface Peer {\n  id: string;\n  color: string;\n  status: ConnectionStatus;\n}\n\nexport interface PeerState {\n  peers: {\n    [id: string]: Peer;\n  };\n}\n\nconst initialPeerState: PeerState = {\n  peers: {},\n};\n\nconst peerSlice = createSlice({\n  name: 'peer',\n  initialState: initialPeerState,\n  reducers: {\n    connectPeer(state, action: PayloadAction<{ id: string; color: string; status: ConnectionStatus }>) {\n      const { id, color, status } = action.payload;\n      state.peers[id] = {\n        id,\n        color,\n        status,\n      };\n    },\n    disconnectPeer(state, action: PayloadAction<string>) {\n      state.peers[action.payload].status = ConnectionStatus.Disconnected;\n    },\n  },\n});\n\nexport const { connectPeer, disconnectPeer } = peerSlice.actions;\nexport default peerSlice.reducer;\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport yorkie, { Client, Document } from 'yorkie-js-sdk';\n\nexport interface DocState {\n  client: Client | null;\n  doc: Document | null;\n  loading: boolean;\n  errorMessage: string;\n}\n\nconst initialState: DocState = {\n  client: null,\n  doc: null,\n  loading: false,\n  errorMessage: '',\n};\n\nexport const attachDoc = createAsyncThunk<AttachDocResult, string, { rejectValue: string }>(\n  'docs/attach',\n  async (docKey: string, thunkApi) => {\n    try {\n      const client = yorkie.createClient(`${process.env.REACT_APP_YORKIE_RPC_ADDR}`);\n      const document = yorkie.createDocument('codepairs', docKey);\n\n      await client.activate();\n      await client.attach(document);\n\n      document.update((root: any) => {\n        if (!root.content) {\n          root.createText('content');\n        }\n      });\n      await client.sync();\n      return { document, client };\n    } catch (err) {\n      return thunkApi.rejectWithValue(err);\n    }\n  },\n);\n\nconst docSlice = createSlice({\n  name: 'doc',\n  initialState,\n  reducers: {\n    attachDocLoading(state, action: PayloadAction<boolean>) {\n      state.loading = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(attachDoc.fulfilled, (state, { payload }) => {\n      state.doc = payload.document;\n      state.client = payload.client;\n    });\n    builder.addCase(attachDoc.rejected, (state, { payload }) => {\n      state.errorMessage = payload!;\n    });\n  },\n});\n\nexport const { attachDocLoading } = docSlice.actions;\nexport default docSlice.reducer;\n\ntype AttachDocResult = { document: Document; client: Client };\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum CodeMode {\n  Javascript = 'javascript',\n  Clojure = 'clojure',\n  Dart = 'dart',\n  Go = 'go',\n  Python = 'python',\n  Ruby = 'ruby',\n  Rust = 'rust',\n}\n\nexport enum CodeTheme {\n  Material = 'material',\n  Monokai = 'monokai',\n}\n\nexport enum CodeKeyMap {\n  Sublime = 'sublime',\n  Vim = 'vim',\n  Emacs = 'emacs',\n}\n\nexport enum TabSize {\n  Two = '2',\n  Four = '4',\n  Eight = '8',\n}\n\nexport type MenuKey = 'codeMode' | 'codeTheme' | 'codeKeyMap' | 'tabSize';\n\nexport type Menu = {\n  [key in MenuKey]: string;\n};\n\nexport interface SettingState {\n  menu: Menu;\n}\n\nconst initialState: SettingState = {\n  menu: {\n    codeMode: CodeMode.Go,\n    codeTheme: CodeTheme.Monokai,\n    codeKeyMap: CodeKeyMap.Sublime,\n    tabSize: TabSize.Two,\n  },\n};\n\nconst settingSlice = createSlice({\n  name: 'setting',\n  initialState,\n  reducers: {\n    setCodeMode(state, action: PayloadAction<CodeMode>) {\n      state.menu.codeMode = action.payload;\n    },\n\n    setCodeTheme(state, action: PayloadAction<CodeTheme>) {\n      state.menu.codeTheme = action.payload;\n    },\n\n    setCodeKeyMap(state, action: PayloadAction<CodeKeyMap>) {\n      state.menu.codeKeyMap = action.payload;\n    },\n\n    setTabSize(state, action: PayloadAction<TabSize>) {\n      state.menu.tabSize = action.payload;\n    },\n  },\n});\n\nexport const { setCodeMode, setCodeTheme, setCodeKeyMap, setTabSize } = settingSlice.actions;\nexport default settingSlice.reducer;\n","import { combineReducers } from 'redux';\n\nimport docReducer from './docReducer';\nimport peerReducer from './peerReducer';\nimport settingReducer from './settingReducer';\n\nconst rootReducer = combineReducers({\n  docState: docReducer,\n  peerState: peerReducer,\n  settingState: settingReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { AppState } from 'reducers/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['docs/attach/fulfilled'],\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n    immutableCheck: {\n      ignoredPaths: ['docState.client', 'docState.doc'],\n    },\n  }),\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, AppState, unknown, Action<string>>;\n\nexport default store;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Yorkie CodePair\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport MaterialModal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    modal: {\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  }),\n);\n\ninterface ModalProps {\n  open: boolean;\n  onClose: (event: object, reason: string) => void;\n  children: ReactNode;\n}\n\n/**\n * @param {ModalProps} props\n */\nconst Modal = (props: ModalProps) => {\n  const { open, onClose, children } = props;\n  const classes = useStyles();\n\n  return (\n    <MaterialModal\n      open={open}\n      onClose={onClose}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <div className={classes.modal}>{children}</div>\n    </MaterialModal>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@material-ui/core/Box';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport { CodeTheme, CodeKeyMap, TabSize, setCodeTheme, setCodeKeyMap, setTabSize } from 'reducers/settingReducer';\nimport { AppState } from 'reducers/rootReducer';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n      width: '400px',\n      minWidth: '320px',\n      borderRadius: '4px',\n    },\n    header: {\n      backgroundColor: theme.palette.primary.main,\n      borderBottom: `1px solid ${theme.palette.text.disabled}`,\n    },\n    title: {\n      padding: '12px 16px',\n    },\n    list: {\n      padding: '12px 24px',\n      lineHeight: '19px',\n    },\n    item: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      fontSize: '15px',\n      marginTop: '12px',\n    },\n    itemTitle: {\n      whiteSpace: 'nowrap',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    itemInfo: {\n      minWidth: 140,\n      paddingLeft: '12px',\n      backgroundColor: 'transparent',\n      border: '1px solid #aaa',\n      borderRadius: '4px',\n      textAlign: 'left',\n    },\n  }),\n);\n\nconst CodeSetting = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const menu = useSelector((state: AppState) => state.settingState.menu);\n\n  function handleChange<T>(action: ActionCreatorWithPayload<T>) {\n    return (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n      dispatch(action(event.target.value as T));\n    };\n  }\n\n  return (\n    <div className={classes.root}>\n      <Box>\n        <header className={classes.header}>\n          <Typography className={classes.title} variant=\"h6\">\n            Editor Settings\n          </Typography>\n        </header>\n      </Box>\n\n      <div className={classes.list}>\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Theme</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.codeTheme} onChange={handleChange(setCodeTheme)} disableUnderline displayEmpty>\n              {Object.entries(CodeTheme).map(([display, theme]: [string, string]) => {\n                return (\n                  <MenuItem value={theme} key={theme}>\n                    {display}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Key binding</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.codeKeyMap} onChange={handleChange(setCodeKeyMap)} disableUnderline displayEmpty>\n              {Object.entries(CodeKeyMap).map(([display, codeKeyMap]: [string, string]) => {\n                return (\n                  <MenuItem value={codeKeyMap} key={codeKeyMap}>\n                    {display}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className={classes.item}>\n          <div className={classes.itemTitle}>Tab Size</div>\n          <FormControl className={classes.itemInfo}>\n            <Select value={menu.tabSize} onChange={handleChange(setTabSize)} disableUnderline displayEmpty>\n              {Object.entries(TabSize).map(([key, tabSize]: [string, string]) => {\n                return (\n                  <MenuItem value={tabSize} key={key}>\n                    {`${tabSize} spaces`}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CodeSetting;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Grid from '@material-ui/core/Grid';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport Modal from 'components/Modal';\nimport { AppState } from 'reducers/rootReducer';\nimport { CodeMode, setCodeMode } from 'reducers/settingReducer';\nimport CodeSetting from './CodeSetting';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '6px',\n      position: 'relative',\n    },\n    formControl: {\n      minWidth: 140,\n      border: `1px solid ${theme.palette.grey['800']}`,\n      borderRadius: '4px',\n    },\n    selectEmpty: {\n      paddingLeft: '12px',\n    },\n    box: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n  }),\n);\n\nexport default function CodeNavBar() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const menu = useSelector((state: AppState) => state.settingState.menu);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleCodeModeChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    dispatch(setCodeMode(event.target.value as CodeMode));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\">\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <Select\n              name=\"codeMode\"\n              value={menu.codeMode}\n              onChange={handleCodeModeChange}\n              className={classes.selectEmpty}\n              disableUnderline\n              displayEmpty\n            >\n              {Object.entries(CodeMode).map(([display, mode]: [string, string]) => {\n                return (\n                  <MenuItem value={mode} key={mode}>\n                    {display}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item>\n          <SettingsIcon onClick={() => setIsModalOpen(true)} />\n        </Grid>\n      </Grid>\n\n      <Modal open={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        <CodeSetting />\n      </Modal>\n    </div>\n  );\n}\n","import invert from 'invert-color';\n\n// TODO(hackerwins): Replace with ActorID from yorkie-js-sdk\ntype ActorID = string;\n\n// REF https://github.com/FujitsuLaboratories/cattaz/blob/master/src/AppEnabledWikiEditorCodeMirror.jsx#L24\nclass ClientCursor {\n  private id: ActorID;\n\n  private color: string;\n\n  private height: number;\n\n  private marker: CodeMirror.TextMarker | null;\n\n  private lineMarker: CodeMirror.TextMarker | null;\n\n  private nameRemoveTimeMap: Map<ActorID, ReturnType<typeof setTimeout>>;\n\n  private nameAnimationDelay: number;\n\n  private nameAnimationDuration: number;\n\n  private nameRemoveTime: number;\n\n  constructor(id: ActorID, color: string) {\n    this.id = id;\n    this.color = color;\n    this.height = 0;\n    this.marker = null;\n    this.lineMarker = null;\n\n    this.nameRemoveTimeMap = new Map();\n    this.nameAnimationDelay = 1;\n    this.nameAnimationDuration = 0.2;\n    this.nameRemoveTime = (this.nameAnimationDuration + this.nameAnimationDelay) * 1000;\n  }\n\n  updateCursor(cm: CodeMirror.Editor, cursorPos: CodeMirror.Position) {\n    this.removeCursor();\n    const cursorCoords = cm.cursorCoords(cursorPos);\n    const cursorHolder = document.createElement('span');\n    this.height = cursorCoords.bottom - cursorCoords.top;\n\n    cursorHolder.classList.add('codePair-cursor');\n    cursorHolder.style.borderLeftColor = this.color;\n    cursorHolder.style.height = `${this.height}px`;\n\n    this.marker = cm.setBookmark(cursorPos, {\n      widget: cursorHolder,\n      insertLeft: true,\n    });\n\n    this.showCursorNameReserve(cursorHolder);\n  }\n\n  updateLine(cm: CodeMirror.Editor, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) {\n    this.removeLine();\n\n    this.lineMarker = cm.getDoc().markText(fromPos, toPos, {\n      css: `background-color : ${this.color}; opacity:0.7`,\n    });\n  }\n\n  // when user's cursor hover, show name\n  private showCursorNameReserve(cursorHolder: Element) {\n    const nameHolder = document.createElement('span');\n    nameHolder.classList.add('codePair-name');\n\n    cursorHolder.addEventListener('mouseenter', () => {\n      if (this.nameRemoveTimeMap.has(this.id)) {\n        clearTimeout(this.nameRemoveTimeMap.get(this.id)!);\n      }\n\n      nameHolder.textContent = this.id;\n      nameHolder.style.top = `-${this.height}px`;\n      nameHolder.style.backgroundColor = this.color;\n      nameHolder.style.color = invert(this.color, true);\n\n      /**\n       * nameEl is being reused.\n       * In order to keep the name visible while the mouse is hovering,\n       * It need to delete the css class containing animation when it is mouseenter and add it when it is mouseleave.\n       */\n      nameHolder.classList.remove('text-remove');\n      cursorHolder.appendChild(nameHolder);\n    });\n\n    cursorHolder.addEventListener('mouseleave', () => {\n      nameHolder.classList.add('text-remove');\n      nameHolder.style.animationDuration = `${this.nameAnimationDuration}s`;\n      nameHolder.style.animationDelay = `${this.nameAnimationDelay}s`;\n\n      this.removeNameReserve(nameHolder);\n    });\n  }\n\n  // After animate, It should actually be deleted it.\n  private removeNameReserve(nameHolder: HTMLSpanElement) {\n    const timeoutId = setTimeout(() => {\n      nameHolder.parentNode!.removeChild(nameHolder);\n      this.nameRemoveTimeMap.delete(this.id);\n    }, this.nameRemoveTime);\n\n    this.nameRemoveTimeMap.set(this.id, timeoutId);\n  }\n\n  removeCursor() {\n    if (this.marker) {\n      this.marker.clear();\n      this.marker = null;\n    }\n  }\n\n  removeLine() {\n    if (this.lineMarker) {\n      this.lineMarker.clear();\n      this.lineMarker = null;\n    }\n  }\n}\n\nexport default ClientCursor;\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport { Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport randomColor from 'randomcolor';\n\nimport { AppState } from 'reducers/rootReducer';\nimport { attachDoc, attachDocLoading } from 'reducers/docReducer';\nimport { ConnectionStatus, connectPeer, disconnectPeer } from 'reducers/peerReducer';\n\nimport ClientCursor from './ClientCursor';\n\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/edit/closetag';\n\nimport 'codemirror/mode/go/go';\nimport 'codemirror/mode/dart/dart';\nimport 'codemirror/mode/ruby/ruby';\nimport 'codemirror/mode/rust/rust';\nimport 'codemirror/mode/python/python';\nimport 'codemirror/mode/clojure/clojure';\nimport 'codemirror/mode/javascript/javascript';\n\nimport 'codemirror/keymap/sublime';\nimport 'codemirror/keymap/emacs';\nimport 'codemirror/keymap/vim';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/theme/material.css';\nimport './CodeEditor.css';\n\ntype CodeEditorProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    height: 'calc(100vh - 110px)',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n}));\n\nexport default function CodeEditor(props: CodeEditorProps) {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const { docKey } = props;\n  const doc = useSelector((state: AppState) => state.docState.doc);\n  const client = useSelector((state: AppState) => state.docState.client);\n  const loading = useSelector((state: AppState) => state.docState.loading);\n  const errorMessage = useSelector((state: AppState) => state.docState.errorMessage);\n  const peerClients = useSelector((state: AppState) => state.peerState.peers);\n  const menu = useSelector((state: AppState) => state.settingState.menu);\n  const otherClientsCursor = useRef<Map<string, ClientCursor>>(new Map());\n\n  const connectClient = (clientId: string) => {\n    const existedClient = peerClients[clientId];\n\n    let color: string;\n    if (existedClient && existedClient.status === ConnectionStatus.Disconnected) {\n      color = existedClient.color;\n    } else {\n      color = randomColor();\n    }\n\n    const newClientCursor = new ClientCursor(clientId, color);\n    otherClientsCursor.current.set(clientId, newClientCursor);\n    dispatch(connectPeer({ id: clientId, color, status: ConnectionStatus.Connected }));\n  };\n\n  // Attach document\n  useEffect(() => {\n    async function attachDocAsync() {\n      dispatch(attachDocLoading(true));\n      await dispatch(attachDoc(docKey));\n      dispatch(attachDocLoading(false));\n    }\n    attachDocAsync();\n  }, [docKey, dispatch]);\n\n  // Subscribe other client\n  useEffect(() => {\n    if (!client || !doc) {\n      return () => {};\n    }\n\n    const disconnectClient = (clientId: string) => {\n      if (otherClientsCursor.current.has(clientId)) {\n        otherClientsCursor.current.get(clientId)!.removeCursor();\n        otherClientsCursor.current.delete(clientId);\n      }\n      dispatch(disconnectPeer(clientId));\n    };\n\n    const unsubscribe = client.subscribe((event: any) => {\n      if (event.name === 'peers-changed') {\n        const newPeerClients = event.value[doc.getKey().toIDString()];\n\n        for (const clientId of Object.keys(peerClients)) {\n          if (newPeerClients[clientId] && peerClients[clientId].status === ConnectionStatus.Connected) {\n            continue;\n          }\n          disconnectClient(clientId);\n        }\n      }\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [client, doc, peerClients, dispatch]);\n\n  if (loading) {\n    return (\n      <Box className={classes.root}>\n        <CircularProgress color=\"inherit\" />\n      </Box>\n    );\n  }\n\n  if (errorMessage || client === null || doc === null) {\n    return (\n      <div className={classes.root}>\n        <Snackbar open anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n          <Alert severity=\"warning\">{errorMessage || 'fail to attach document'}</Alert>\n        </Snackbar>\n      </div>\n    );\n  }\n\n  return (\n    <CodeMirror\n      options={{\n        mode: menu.codeMode,\n        theme: menu.codeTheme,\n        keyMap: menu.codeKeyMap,\n        tabSize: Number(menu.tabSize),\n        lineNumbers: true,\n        lineWrapping: true,\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n      }}\n      editorDidMount={(editor: CodeMirror.Editor) => {\n        editor.focus();\n        const updateCursor = (clientId: string, pos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateCursor(editor, pos);\n        };\n\n        const updateLine = (clientId: string, fromPos: CodeMirror.Position, toPos: CodeMirror.Position) => {\n          const clientCursor = otherClientsCursor.current.get(clientId);\n          clientCursor!.updateLine(editor, fromPos, toPos);\n        };\n\n        doc.subscribe((event: any) => {\n          if (event.name === 'remote-change') {\n            event.value.forEach((change: any) => {\n              const { actor } = change.getID();\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                  updateCursor(actor, editor.posFromIndex(0));\n                  // TODO Load user's cursor position\n                }\n              }\n            });\n          }\n        });\n\n        // When there is a document modification connected to the yorkie\n        const root = doc.getRootObject() as any;\n        root.content.onChanges((changes: any) => {\n          changes.forEach((change: any) => {\n            const { actor, from, to } = change;\n            if (change.type === 'content') {\n              const content = change.content || '';\n\n              if (actor !== client.getID()) {\n                const fromPos = editor.posFromIndex(from);\n                const toPos = editor.posFromIndex(to);\n                editor.replaceRange(content, fromPos, toPos, 'yorkie');\n              }\n            } else if (change.type === 'selection') {\n              if (actor !== client.getID()) {\n                if (!otherClientsCursor.current.has(actor)) {\n                  connectClient(actor);\n                }\n\n                let fromPos = editor.posFromIndex(from);\n                let toPos = editor.posFromIndex(to);\n                updateCursor(actor, toPos);\n\n                if (from > to) {\n                  [toPos, fromPos] = [fromPos, toPos];\n                }\n                updateLine(actor, fromPos, toPos);\n              }\n            }\n          });\n        });\n\n        // We need to subtract the height of NavBar.\n        editor.setSize('auto', 'calc(100vh - 110px)');\n        editor.setValue(root.content.getValue());\n      }}\n      // Notifying other clients to move the cursor\n      onSelection={(editor: CodeMirror.Editor, data: CodeMirror.EditorSelectionChange) => {\n        if (data.origin === undefined) {\n          return;\n        }\n\n        const from = editor.indexFromPos(data.ranges[0].anchor);\n        const to = editor.indexFromPos(data.ranges[0].head);\n\n        doc.update((root: any) => {\n          root.content.updateSelection(from, to);\n        });\n      }}\n      // Edit the yorkie document\n      onBeforeChange={(editor: CodeMirror.Editor, change: CodeMirror.EditorChange) => {\n        if (change.origin === 'yorkie' || change.origin === 'setValue') {\n          return;\n        }\n\n        const from = editor.indexFromPos(change.from);\n        const to = editor.indexFromPos(change.to);\n        const content = change.text.join('\\n');\n\n        doc.update((root: any) => {\n          root.content.edit(from, to, content);\n        });\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport NavBar from 'components/NavBar';\nimport CodeNavBar from 'components/Editor/CodeNavBar';\nimport CodeEditor from 'components/Editor/CodeEditor';\n\ntype DocPageProps = {\n  docKey: string;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default function DocPage(props: RouteComponentProps<DocPageProps>) {\n  const classes = useStyles();\n  const {\n    match: { params },\n  } = props;\n  const { docKey } = params;\n\n  return (\n    <div className={classes.root}>\n      <NavBar />\n      <CodeNavBar />\n      <CodeEditor docKey={docKey} />\n    </div>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport store from 'store/store';\nimport DocPage from 'pages/DocPage';\n\nimport './App.css';\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = useMemo(\n    () => createMuiTheme({\n      palette: {\n        type: prefersDarkMode ? 'dark' : 'light',\n      },\n    }),\n    [prefersDarkMode],\n  );\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Router>\n          <Route\n            path=\"/\"\n            exact\n            render={() => {\n              return <Redirect to={`/${Math.random().toString(36).substring(7)}`} />;\n            }}\n          />\n          <Route path=\"/:docKey\" exact component={DocPage} />\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}